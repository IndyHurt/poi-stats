# This style highlights unnamed features of the selected types in red.
# Search for "nameless" to find the featured layer,

cameras:
    camera1:
        type: perspective
        position: [114.1376, 22.2859, 16] # lon/lat for Hong Kong at zoom 16

labels-global:
    - &text_visible_continent         true
    - &text_visible_admin             true
    - &text_visible_populated_places  true
    - &icon_visible_populated_places  true
    - &text_visible_neighbourhoods    true
    - &text_visible_neighbourhoods_e  true
    - &text_visible_building          true
    - &text_visible_address           true
    - &text_visible_water_labels      true
    - &label_visible_landuse_green    true
    - &icon_visible_landuse_green     false
    - &text_visible_landuse_green     true
    - &label_visible_poi_landuse      true
    - &icon_visible_poi_landuse       false
    - &text_visible_poi_landuse       false
    - &label_visible_poi_landuse_e    true
    - &icon_visible_poi_landuse_e     false
    - &text_visible_poi_landuse_e     true
    - &label_visible_station          false
    - &icon_visible_station           false
    - &text_visible_station           false
    - &text_visible_highway           true
    - &text_visible_highway_e         false
    - &text_visible_trunk_primary     true
    - &text_visible_trunk_primary_e   true
    - &text_visible_secondary         true
    - &text_visible_secondary_e       true
    - &text_visible_tertiary          true
    - &text_visible_tertiary_e        true
    - &text_visible_minor_road        true
    - &text_visible_minor_road_e      true
    - &text_visible_service_road      true
    - &text_visible_path              true
    - &text_visible_steps             true

zinc-light-gray-colors:
    cameras:
        - &camera_settings            { type: isometric, axis: [0, .1], vanishing_point: [0, -500] }

    lights:
        - &light_settings             { type: directional, direction: [1, 1, -.9], diffuse: 0.5, ambient: 0.85 }

    roads:
        - &highway1                   [0.8, 0.8, 0.8]
        - &highway1_e                 [0.8, 0.8, 0.8]
        - &highway_link1              [0.8, 0.8, 0.8]
        - &highway_casing1            [0.2, 0.2, 0.2]
        - &highway_tunnel1            [0.6, 0.6, 0.6]
        - &highway_tunnel_casing1     [0.75, 0.75, 0.75]
        - &highway_link_tunnel_casing1 [0.6, 0.6, 0.6]
        - &ferry1                     [0.4, 0.4, 0.4]
        - &rail1                      '#777'
        - &rail1_e                    '#777'
        - &rail2                      '#999'             # less important rail (service, sidings)
        - &major_road1                [0.8, 0.8, 0.8]
        - &major_road1b               [0.8, 0.8, 0.8]
        - &major_road1c               [0.8, 0.8, 0.8]
        - &major_road2                [0.8, 0.8, 0.8]
        - &major_road2a               [0.8, 0.8, 0.8]
        - &major_road2b               [0.8, 0.8, 0.8]
        - &major_road3                [0.8, 0.8, 0.8]
        - &major_road4                [0.8, 0.8, 0.8]
        - &major_road5                [0.8, 0.8, 0.8]
        - &major_casing1              [0.45, 0.45, 0.45]  # same as highway_casing1
        - &major_casing2              [0.5, 0.5, 0.5]     # zoomed out
        - &major_tunnel1              grey
        - &major_tunnel_casing1       [0.75, 0.75, 0.75]
        - &major_route1               [0.8, 0.8, 0.8]
        - &major_route2               [0.8, 0.8, 0.8]     # zoomed out
        - &minor_route                [0.8, 0.8, 0.8]     # same as major_route
        - &major_road4                [0.60, 0.60, 0.60]
        - &minor_road1                [0.60, 0.60, 0.60]  # natural earth
        - &minor_road2                [0.40, 0.40, 0.40]  # natural earth, same as major_road2
        - &minor_road3                '#ccc'
        - &minor_road4                '#ccc'              # zoomed out
        - &minor_road5                [0.8, 0.8, 0.8]     # zoomed out, again
        - &minor_casing1              [0.2, 0.2, 0.2]     # same as highway_casing1
        - &minor_casing2              [0.2, 0.2, 0.2]     # zoomed out
        - &minor_tunnel1              [0.9, 0.9, 0.9]
        - &minor_tunnel_casing1       [0.1, 0.1, 0.1]
        - &service_road1              [0.2, 0.2, 0.2]
        - &service_road2              '#bbb'
        - &service_road_casing1       grey
        - &service_road_casing2       '#444'
        - &path1                      '#b3b3b3'
        - &path2                      '#b3b3b3'           # zoomed out
        - &path_casing1               '#6b6b6b'
        - &path_bridge_casing1        grey
        - &path_bridge_casing2        grey                # zoomed out
        - &path_steps1                grey
        - &path_steps1_b              '#dadada'
        
    boundaries:
        - &country_boundary           [0.3,0.3,0.3]
        - &region_boundary            [0.4,0.4,0.4]
        - &subregion_boundary         '#ccc'
        - &city_wall                  '#b7b7b7'
        - &retaining_wall             '#c7c7c7'

    areas:
        - &scene1      [0.85, 0.85, 0.85]  # map background, water
        - &water1      grey                # water
        - &water2      [0.70, 0.70, 0.70]  # playa
        - &water1_o    [0.30, 0.30, 0.30]  # water stroke
        - &water2_o    [0.40, 0.40, 0.40]  # water stroke
        - &earth1      [0.75, 0.75, 0.75]  # land color
        - &earth1_r    '#666'              # land color road
        - &earth2      '#111'              # urban
        - &earth2_v    false               # urban
        - &earth2_e    '#b3b3b3'           # urban early
        - &earth2_e2   '#b3b3b3'           # urban early fade in
        - &earth2_e3   '#bbbbbb'           # urban early fade in 3
        - &earth2_ev   true                # urban early visibility
        - &green1      [0.55,0.55,0.55]    # park
        - &green1_r    [0.60,0.60,0.60]    # park roads
        - &green1_b    [0.60, 0.60, 0.60]  # park buildings
        - &green1_bo   [0.20, 0.20, 0.20]  # park building outlines
        - &green1_w    [0.6,0.6,0.6]       # wilderness area
        - &green1_ws   '#6e6e6e'           # wilderness area stroke
        - &green1b     [0.80,0.80,0.80]    # park
        - &green2      [0.7,0.7,0.7]       # cemetery
        - &green2_r    [0.65,0.65,0.66]    # cemetery road
        - &green3      [0.7,0.7,0.7]       # golf course
        - &green4      [0.90,0.90,0.9]     # farm faint
        - &green4_v    false               # farm faint
        - &green5      [0.75,0.75,0.75]    # farm
        - &green6      [0.55,0.55,0.55]    # nature reserve
        - &green7      [0.65,0.65,0.65]    # forest / park
        - &green8      [0.65,0.65,0.65]    # conservation
        - &green9      [0.7, 0.7, 0.7]     # forest (landcover)
        - &green9_e    [0.7, 0.7, 0.7]     # forest (landcover) early
        - &green9_v    true                # forest (landcover) visibility
        - &orange1     '#aaaaaa'           # stadium
        - &orange2     '#bbbbbb'           # pitch (play field)
        - &brown1      [.67, .67, .67]     # university
        - &brown1_r    [.5, .5, .5]        # university roads
        - &brown1_b    [.63, .63, .63]     # university buildings
        - &brown1_bo   [0.20, 0.20, 0.20]  # university building outlines
        - &brown2      '#aaaaaa'           # school
        - &brown3      '#b8b8b8'           # playground
        - &red1        '#a2a2a2'           # hospital
        - &red1_r      [.5, .5, .5]        # hospital roads
        - &red1_b      [.65, .65, .65]     # hospital buildings
        - &red1_bo     [0.20, 0.20, 0.20]  # hospital building outlines
        - &grey1       '#cccccc'           # pedestrian, retail, airport apron, parking, church
        - &grey1_e     [.8, .8, .8]        # pedestrian, retail, airport apron, parking, church early zoom 14
        - &grey1_v     true                # pedestrian, retail, airport apron, parking, church
        - &grey2       [0.3, 0.3, 0.3]     # airport runway
        - &grey3       [0.65,0.65,0.65]    # railway
        - &grey4       '#cfcfcf'           # airport taxiway
        - &grey5       '#cfcfcf'           # airport taxiway
        - &grey6       '#c6c6c6'           # industrial
        - &grey6_b     [.65, .65, .65]     # industrial buildings
        - &grey6_bo    [.8, .8, .8]        # industrial building outlines
        - &purple      [.55, .55, .55]     # airport
        - &purple_v    true                # airport
        - &mystry1     '#aaaaaa'           # recreation ground (type of park, sometimes around reservoirs)
        - &building1   [.7, .7, .7]        # building
        - &building2   [.1, .1, .1]        # building stroke
        - &building_o  25                  # building stroke order
        - &building_e  false               # building extrude
    
    labels:
        - &text_fill         [0.2, 0.2, 0.2]    # BLACK
        - &text_fill2        '#555'             # WHITE
        - &text_fill_building [0.3, 0.3, 0.3]   # WHITE
        - &text_fill_water   '#000'             # blue
        - &text_fill_park    '#555'             # green
        - &text_stroke       [0.8, 0.8, 0.8]    # land color
        - &text_stroke_water [0.8, 0.8, 0.8]    # water stroke color
        - &text_stroke_park  [0.8, 0.8, 0.8]    # park stroke color
        - &text_stroke_building  [.8, .8, .8]   # building stroke color
        - &text_stroke_road1  [0.8, 0.8, 0.8]   # road stroke color highway
        - &text_stroke_road2  [0.8, 0.8, 0.8]   # road stroke color major road
        - &text_stroke_road3  [0.8, 0.8, 0.8]   # road stroke color major road route
        - &text_stroke_road4  [0.8, 0.8, 0.8]   # road stroke color minor road
        - &townspot_sprite   townspot-l-rev     # depends on land color and text settings

textures:
    pois:
        url: images/poi_icons_18@2x.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            adult-boutique: [252, 108, 36, 36]
            airport: [180, 36, 36, 36]
            animal-shelter: [432, 0, 36, 36]
            antique-shop: [216, 108, 36, 36]
            aquarium: [684, 252, 36, 36]
            arcade: [576, 252, 36, 36]
            art-gallery: [540, 252, 36, 36]
            arts-crafts: [180, 108, 36, 36]
            athletics-sports: [288, 216, 36, 36]
            atm: [36, 216, 36, 36]
            automotive-shop: [108, 216, 36, 36]
            bagel-shop: [468, 288, 36, 36]
            bakery: [144, 252, 36, 36]
            bank: [72, 216, 36, 36]
            bar: [468, 216, 36, 36]
            baseball-field: [72, 144, 36, 36]
            basketball-court: [36, 144, 36, 36]
            basketball-stadium: [360, 252, 36, 36]
            bathroom: [216, 144, 36, 36]
            battlefield: [360, 144, 36, 36]
            bbq: [36, 288, 36, 36]
            beach: [288, 144, 36, 36]
            beach-resort: [252, 144, 36, 36]
            beer-garden: [576, 288, 36, 36]
            bench: [756, 0, 36, 36]
            bicycle-parking: [648, 180, 36, 36]
            bike-shop: [0, 216, 36, 36]
            boat-ferry: [144, 36, 36, 36]
            boat-ramp: [360, 108, 36, 36]
            bookstore: [937, 180, 36, 36]
            bowling-alley: [504, 252, 36, 36]
            breakfast: [108, 288, 36, 36]
            bridal-shop: [144, 72, 36, 36]
            bridge: [540, 144, 36, 36]
            building: [684, 216, 36, 36]
            burger: [360, 288, 36, 36]
            bus-station: [72, 36, 36, 36]
            butcher: [900, 72, 36, 36]
            camera-store: [901, 180, 36, 36]
            campground: [504, 144, 36, 36]
            candy-store: [180, 288, 36, 36]
            capital-l: [841, 288, 23, 23]
            capital-m: [822, 288, 18, 18]
            capital-s: [806, 288, 17, 17]
            capital-xl: [863, 288, 25, 25]
            capital-xs: [792, 288, 13, 13]
            car-dealership: [864, 180, 36, 36]
            car-wash: [828, 180, 36, 36]
            carribean-restaurant: [36, 252, 36, 36]
            casino: [468, 252, 36, 36]
            castle: [180, 72, 36, 36]
            cemetery: [468, 144, 36, 36]
            cheese-shop: [144, 288, 36, 36]
            chinese-restaurant: [72, 252, 36, 36]
            church: [72, 180, 36, 36]
            city: [756, 108, 36, 36]
            clinic: [216, 0, 36, 36]
            clothing-store: [756, 252, 36, 36]
            cocktail-bar: [432, 216, 36, 36]
            coffee-shop: [108, 252, 36, 36]
            college-university: [864, 252, 36, 36]
            comedy-club: [432, 252, 36, 36]
            concert-hall: [396, 252, 36, 36]
            convenience-store: [108, 108, 36, 36]
            cosmetics-shop: [72, 108, 36, 36]
            courthouse: [396, 0, 36, 36]
            credit-union: [792, 180, 36, 36]
            cupcake-shop: [937, 216, 36, 36]
            daycare: [36, 108, 36, 36]
            dentist: [252, 0, 36, 36]
            department-store: [756, 180, 36, 36]
            design-studio: [108, 72, 36, 36]
            dessert: [36, 0, 36, 36]
            dog-run: [216, 216, 36, 36]
            donut: [252, 288, 36, 36]
            electronics-store: [612, 180, 36, 36]
            ev-charging-station: [720, 180, 36, 36]
            factory: [648, 216, 36, 36]
            farm: [432, 144, 36, 36]
            farmers-market: [540, 180, 36, 36]
            field: [396, 144, 36, 36]
            financial-service: [576, 180, 36, 36]
            fire-station: [360, 0, 36, 36]
            fish-market: [504, 180, 36, 36]
            fishing-spot: [648, 252, 36, 36]
            fitness: [792, 72, 36, 36]
            flea-market: [937, 72, 36, 36]
            flower-shop: [937, 144, 36, 36]
            food-court: [468, 180, 36, 36]
            food-drink-shop: [864, 72, 36, 36]
            football-stadium: [828, 252, 36, 36]
            ford: [576, 0, 36, 36]
            forest: [103, 324, 36, 36]
            fountain: [144, 180, 36, 36]
            fried-chicken-joint: [901, 216, 36, 36]
            fun-fair: [612, 144, 36, 36]
            furniture-store: [360, 180, 36, 36]
            gaming-cafe: [864, 144, 36, 36]
            garden: [324, 144, 36, 36]
            garden-center: [828, 72, 36, 36]
            gas-station: [0, 288, 36, 36]
            gastropub: [0, 252, 36, 36]
            gate: [684, 0, 36, 36]
            gay-bar: [396, 216, 36, 36]
            general-entertainment: [324, 252, 36, 36]
            general-travel: [36, 36, 36, 36]
            generic: [756, 288, 36, 36]
            german-restaurant: [864, 216, 36, 36]
            gift-shop: [828, 144, 36, 36]
            golf-course: [0, 144, 36, 36]
            gourmet-shop: [901, 144, 36, 36]
            government-building: [252, 216, 36, 36]
            grocery-store: [432, 180, 36, 36]
            harbor-marina: [180, 216, 36, 36]
            hardware-store: [756, 72, 36, 36]
            hiking-trail: [720, 108, 36, 36]
            historic-site: [792, 144, 36, 36]
            hobby-shop: [684, 72, 36, 36]
            hockey-field: [937, 108, 36, 36]
            hospital: [180, 0, 36, 36]
            hot-dog-joint: [612, 288, 36, 36]
            hot-pot-restaurant: [216, 288, 36, 36]
            hot-spring: [252, 72, 36, 36]
            hotel: [0, 36, 36, 36]
            hunting-supply: [648, 72, 36, 36]
            ice-cream-shop: [648, 288, 36, 36]
            information: [720, 288, 36, 36]
            internet-cafe: [612, 72, 36, 36]
            island: [684, 108, 36, 36]
            jewelry-store: [576, 72, 36, 36]
            karaoke: [0, 180, 36, 36]
            lake: [648, 108, 36, 36]
            landmark: [324, 0, 36, 36]
            laundry: [540, 72, 36, 36]
            library: [0, 0, 36, 36]
            light-rail: [937, 0, 36, 36]
            lighthouse: [576, 108, 36, 36]
            liquor-store: [396, 180, 36, 36]
            lounge: [360, 216, 36, 36]
            mall: [504, 72, 36, 36]
            marijuana-dispensary: [468, 72, 36, 36]
            market: [432, 72, 36, 36]
            medical-center: [576, 216, 36, 36]
            military-base: [180, 144, 36, 36]
            mine: [720, 72, 36, 36]
            miscellaneous-shop: [360, 72, 36, 36]
            mobile-phone-shop: [324, 72, 36, 36]
            molecular-gastronomy: [324, 288, 36, 36]
            mosque: [108, 0, 36, 36]
            motorcycle-shop: [72, 72, 36, 36]
            mountain: [540, 108, 36, 36]
            movie-theatre: [720, 252, 36, 36]
            moving-target: [901, 0, 36, 36]
            museum: [756, 144, 36, 36]
            music-store: [36, 72, 36, 36]
            music-venue: [288, 252, 36, 36]
            nail-salon: [0, 72, 36, 36]
            neighborhood: [504, 108, 36, 36]
            newsstand: [937, 36, 36, 36]
            nightlife: [180, 252, 36, 36]
            noodle-shop: [432, 288, 36, 36]
            office: [144, 144, 36, 36]
            office-supplies: [864, 36, 36, 36]
            optical-shop: [900, 36, 36, 36]
            other-outdoors: [468, 108, 36, 36]
            park: [108, 180, 36, 36]
            parking: [684, 180, 36, 36]
            performing-arts: [252, 252, 36, 36]
            pet-store: [828, 36, 36, 36]
            pharmacy: [0, 108, 36, 36]
            photography-lab: [792, 36, 36, 36]
            picnic-spot: [720, 0, 36, 36]
            pier: [864, 0, 36, 36]
            pizza: [684, 288, 36, 36]
            playground: [288, 72, 36, 36]
            police: [288, 0, 36, 36]
            pool: [432, 108, 36, 36]
            pool-hall: [720, 144, 36, 36]
            post-office: [540, 216, 36, 36]
            power-pylon: [612, 216, 36, 36]
            public-art: [216, 252, 36, 36]
            racetrack: [684, 144, 36, 36]
            ramen: [396, 288, 36, 36]
            real-estate: [756, 36, 36, 36]
            record-shop: [720, 36, 36, 36]
            recycling-facility: [684, 36, 36, 36]
            rental-car: [828, 0, 36, 36]
            rest-area: [792, 0, 36, 36]
            restaurant: [288, 288, 36, 36]
            river: [396, 108, 36, 36]
            road: [612, 0, 36, 36]
            ruin: [648, 0, 36, 36]
            salon-barber: [648, 36, 36, 36]
            school: [108, 144, 36, 36]
            ship-wreck: [108, 36, 36, 36]
            shoe-store: [396, 72, 36, 36]
            skate-park: [900, 108, 36, 36]
            skating-rink: [864, 108, 36, 36]
            ski-area: [180, 180, 36, 36]
            smoke-shop: [612, 36, 36, 36]
            soccer-field: [828, 108, 36, 36]
            soccer-stadium: [792, 252, 36, 36]
            soup-place: [828, 216, 36, 36]
            spa-massage: [576, 36, 36, 36]
            spiritual-center: [504, 216, 36, 36]
            sporting-goods-shop: [540, 36, 36, 36]
            spring: [612, 108, 36, 36]
            stable: [324, 108, 36, 36]
            stadium: [288, 180, 36, 36]
            steakhouse: [72, 288, 36, 36]
            storage-facility: [504, 36, 36, 36]
            subway: [540, 0, 36, 36]
            surf-shop: [144, 108, 36, 36]
            sushi-restaurant: [36, 180, 36, 36]
            swimming: [324, 180, 36, 36]
            synagogue: [72, 0, 36, 36]
            tailor-shop: [468, 36, 36, 36]
            tanning-salon: [432, 36, 36, 36]
            tattoo-parlor: [396, 36, 36, 36]
            taxi: [504, 0, 36, 36]
            tea-room: [792, 216, 36, 36]
            tennis: [216, 180, 36, 36]
            theme-park: [648, 144, 36, 36]
            thrift-vintage-store: [360, 36, 36, 36]
            toll-booth: [937, 252, 36, 36]
            townspot-l: [52, 324, 23, 23]
            townspot-l-rev: [940, 288, 23, 23]
            townspot-m: [32, 324, 20, 20]
            townspot-m-rev: [920, 288, 20, 20]
            townspot-s: [13, 324, 18, 18]
            townspot-s-rev: [902, 288, 18, 18]
            townspot-xl: [75, 324, 28, 28]
            townspot-xl-rev: [964, 288, 28, 28]
            townspot-xs: [0, 324, 13, 13]
            townspot-xs-rev: [889, 288, 13, 13]
            toy-game-store: [324, 36, 36, 36]
            track: [252, 180, 36, 36]
            traffic-signal: [901, 252, 36, 36]
            train-station: [468, 0, 36, 36]
            travel-agency: [288, 36, 36, 36]
            veterinarian: [144, 0, 36, 36]
            video-game-store: [252, 36, 36, 36]
            video-store: [216, 36, 36, 36]
            view-point: [612, 252, 36, 36]
            vineyard: [144, 216, 36, 36]
            volcano: [288, 108, 36, 36]
            volleyball-court: [792, 108, 36, 36]
            well: [216, 72, 36, 36]
            whisky-bar: [324, 216, 36, 36]
            wine-bar: [540, 288, 36, 36]
            wine-shop: [504, 288, 36, 36]
            winery: [756, 216, 36, 36]
            wings-joint: [720, 216, 36, 36]
            zoo: [576, 144, 36, 36]

sources:
    osm:
        type: TopoJSONTiles
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-zqTFtYE

camera:
    type: isometric
    axis: [0, .1] # very small building extrusion

#lights:
#    light1:
#        type: directional
#        direction: [1, 1, -.9]
#        diffuse: .5
#        ambient: .85

styles:
    dashedline:
        base: lines
        texcoords: true
        shaders:
            blocks:
                global: |
                    vec2 mirrorTile(vec2 _st, vec2 _zoom){
                        _st *= _zoom;
                        if (fract(_st.y * 0.5) > 0.5){
                            _st.x = _st.x+0.5;
                            _st.y = 1.0-_st.y;
                        }
                        return fract(_st);
                    }

                    float fillY(vec2 _st, float _pct,float _antia){
                      return smoothstep( _pct-_antia, _pct, _st.y);
                    }

                    float chevron(vec2 st){
                        st = mirrorTile(st,vec2(1.,6.));
                        float x = st.x*2.; 
                        float a = floor(1.+sin(x*3.14));
                        float b = floor(1.+sin((x+1.)*3.14));
                        float f = fract(x);
                        return fillY(st,mix(a,b,f),0.01);
                    }

                    float stripes(vec2 st){
                        st = st*10.;
                        return step(.5,1.0-smoothstep(.3,1.,abs(sin(st.y*3.1415))));
                    }

                    float xMargin(vec2 st,float margin){
                        return 1.0-clamp(step(margin*.5,st.x)*step(margin*.5,1.0-st.x),0.,1.);
                    }
                    
                    //  Function from Iñigo Quiles
                    //  https://www.shadertoy.com/view/MsS3Wc
                    vec3 hsb2rgb( in vec3 c ){
                        vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),
                                                 6.0)-3.0)-1.0, 
                                         0.0, 
                                         1.0 );
                        rgb = rgb*rgb*(3.0-2.0*rgb);
                        return c.z * mix(vec3(1.0), rgb, c.y);
                    }
                color: |
                    vec2 st = v_texcoord;
                    vec4 foreground = vec4(0.400,0.400,0.400,1.0);
                    
                    vec3 color1 = hsb2rgb(vec3(color.r,1.,1.));
                    vec3 color2 = hsb2rgb(vec3(color.g,1.,1.));
                    
                    // Nathaniel un-comment the following lines
                     color = mix(v_color,foreground, chevron(st) - xMargin(st,.25) );
                     color = mix(v_color,foreground, stripes(st) );
                    // color = mix(v_color,foreground, clamp(stripes(st)-xMargin(st,.9),0.,1.) ) ;

    tools:
        base: polygons
        shaders:
            extensions: OES_standard_derivatives
            blocks:
                global: |
                    // GridTile
                    //=============================
                    varying vec3 v_pos;
                    
                    #ifdef TANGRAM_FRAGMENT_SHADER
                    
                    vec2 TileCoords() { 
                        return fract(v_pos.xy*0.0002445);
                    }

                    bool grid(vec2 st, float res, float press) {
                        vec2 grid = fract(st*res);
                        return grid.x < res*press || grid.y < res*press;
                    }

                    float TileGrid(float res) {
                        vec2 st = TileCoords()*100.*res;
                        float pct = 0.0;
                        float press = 0.4+(1.0-fract(u_map_position.z))*0.1;
                        if (grid(st,0.01,press)) pct += 0.5;
                        if (grid(st,0.1,press)) pct += 0.1;
                        return pct;
                    }

                    float TileGrid() {
                        return mix(TileGrid(1.),TileGrid(2.),fract(u_map_position.z));
                    }

                    float aastep(float threshold, float value) {
                      #ifdef TANGRAM_EXTENSION_OES_standard_derivatives
                        float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;
                        return smoothstep(threshold-afwidth, threshold+afwidth, value);
                      #else
                        return step(threshold, value);
                      #endif  
                    }

                    vec2 tile(vec2 _st, float _zoom){
                      _st *= _zoom;
                      return fract(_st);
                    }

                    vec2 brickTile(vec2 st, float zoom){
                      st *= zoom;
                      if (fract(st.y * 0.5) > 0.5){
                          st.x += 0.5;
                      }
                      return fract(st);
                    }

                    float circleDF(vec2 st){
                      vec2 pos = vec2(0.5)-st;
                      return dot(pos,pos)*3.14;
                    }

                    float circle(vec2 st, float radius){
                      radius *= 0.75;
                      return 1.-aastep(radius,circleDF(st));
                    }

                    float dots(vec2 st, float size){
                        st = brickTile(st, 2.);
                        return circle(st, size);
                    }

                    float dotsDF(vec2 st){
                        st = brickTile(st, 2.);
                        return circleDF(st);
                    }

                    float TileDots(float scale, float size) {
                        vec2 IN = TileCoords()*scale;
                        vec2 OUT = TileCoords()*scale*2.;
                        float pct = fract(u_map_position.z);
                        pct = pow(pct,6.);
                        // return mix(dots(fract(IN),size*(1.-pct)), dots(fract(OUT),size*pct), pct);
                        return mix(dots(fract(IN),size*(1.-pct)), dots(fract(OUT),size*pct), pct);
                    }

                    float TileDotsDF(float scale, float size) {
                        vec2 IN = TileCoords()*scale;
                        vec2 OUT = TileCoords()*scale*2.;
                        float pct = fract(u_map_position.z);
                        pct = pow(pct,15.);
                        float d = 0.0;
                        d = dotsDF(fract(IN))*(1.-pct) + dotsDF(fract(OUT))*pct;
                        d = 1.-aastep(size,d);
                        return d;
                    }

                    // Grain
                    //=============================
                    float random(vec2 p) {
                        return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x))));
                    }

                    float noise(vec2 x) {
                        vec2 i = floor(x);
                        vec2 f = fract(x);
                        float a = random(i);
                        float b = random(i + vec2(1.0, 0.0));
                        float c = random(i + vec2(0.0, 1.0));
                        float d = random(i + vec2(1.0, 1.0));
                        vec2 u = f * f * (3.0 - 2.0 * f);
                        return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;
                    }

                    float fbm(in vec2 p) {
                        float s = 0.0;
                        float m = 0.0;
                        float a = 0.5;
                        for(int i=0; i<2; i++ ){
                            s += a * noise(p);
                            m += a;
                            a *= 0.5;
                            p *= 2.0;
                        }
                        return s/m;
                    }

                    float grain(vec2 pos) {
                        vec2 st = pos/u_resolution.xy-vec2(.5);
                        return dot(st,st)+(fbm(pos*0.6)*0.1);
                    }
                    #endif
                position: |
                    // GridTile
                    v_pos = a_position.xyz * 32767.;

    grid:
        base: polygons
        mix: tools
        shaders:
            blocks:
                filter: |
                    vec2 st = (TileCoords()+vec2(.4))*1000.; 
                    color.rgb = mix(vec3(0.899,0.95,1.0), vec3(0.899,0.95,1.0), gl_FragCoord.x / u_resolution.x);
                    color.rgb -= grain(gl_FragCoord.xy)*0.1;

                    color.rgb = mix(color.rgb, vec3(0.639,0.886,0.906), TileGrid());
                    //float g = grain(st);
                    //color.rgb = mix(color.rgb, vec3(0.475,0.853,0.853),pow(g,3.5));

    ground:
        base: polygons
        mix: tools
        shaders:
            blocks:
                filter: |
                    color.rgb -= grain(gl_FragCoord.xy)*0.5;
    ground2:
        base: polygons
        mix: tools
        shaders:
            blocks:
                filter: |
                    color.rgb -= grain(gl_FragCoord.xy)*0.2;

    icons:
        base: points
        texture: pois
        interactive: true

scene:
    background:
        color: *scene1

layers:
    # Special overlay for Targeted Editing series
    buildings:
        data: { source: osm, layer: [buildings] }
        filter: 
            all:
                - kind: [residential, apartments]    #[false,building,commercial,residential,warehouse,public,dormitory]
                - label_placement: [yes]
        draw:
            icons:
                size: [[13, 14px], [16, 16px], [19, 20px]]
                sprite: building
                interactive: true
                order: 100
                color: white
                priority: 3
            text:
                interactive: false
                move_into_tile: true
                order: 101
                priority: 4
                visible: true
                text_source: function() { if( feature.name ) { return feature.name; } else { return 'Needs name'; } }
                font:
                    family: Helvetica
                    weight: 500
                    style: italic
                    fill: '#8c50c4'
                    size: 12px
                    stroke: { color: '#cdbbd7', width: 2 }
        matched:
            filter:
                name: true
            draw:
                icons:
                    sprite: building
                    color: aqua
                    visible: true
                    priority: 1
                text:
                    offset: [[13,6px],[16,8px],[19,10px]]
                    priority: 2
                    anchor: bottom
                    font:
                        fill: black
                        stroke: { color: '#00ffff', width: 4 }
    buildings-good:
        data: { source: osm, layer: [buildings] }
        filter:
            all:
                - name: true
                - kind: [residential, apartments]
        draw:
            polygons:
                color:  '#bdadbf'
                order: function() { if( $zoom < 17) { return 14; } else { return 12; } }
                interactive: true
            outline:
                style: lines
                order: 10
                color: '#d534df'
                width: [[14,0.1px],[15,0.5px],[17,0.5px],[18,0.75px],[19,0.25m]]
        labels:
            filter: { $geometry: [point], $zoom: { min: 16 } }
            draw:
                text:
                    interactive: false
                    move_into_tile: true
                    order: 101
                    priority: 4
                    visible: true
                    font:
                        family: Helvetica
                        weight: 500
                        style: italic
                        fill: '#8c50c4'
                        size: 12px
                        stroke: { color: '#cdbbd7', width: 2 }

    buildings-bad:
        data: { source: osm, layer: [buildings] }
        filter:
            all:
                - name: false
                - $geometry: [polygon]
                - kind: [residential, apartments]
#            any:
#                # small buildings tend to be houses, not multi-unit buildings
#                - { area: { min: 1000 } }
#                - { volume: { min: 20000 } }
        draw:
            polygons:
                color: aqua
                order: 101
                interactive: true
            outline:
                style: lines
                color: blue
                order: 100
                join: round
                width: [[13,2px],[15,1.5px],[17,2.0px],[18,2.5px],[19,2m]]

    # Map overlays for styling the server response (using special source layer names) for route line, find_me location gem, and search result pins
    route:
        data: { source: route }
        draw:
            lines:
                color: 'purple'
                order: 50
                width: [[0,2.5px],[8,3px],[9,3.5px],[10,4px],[11,5px],[16,8m]]
    current_location_gem:
        data: { source: find_me }
        draw:
            icons:
                priority: 1
                sprite: capital-xl
                size: 36px
    route_icon:
        data: { source: route_icon }
        draw:
            icons:
                priority: 1
                sprite: capital-xl
                size: [38px,49px]
    search:
        data: { source: search }
        draw:
            icons:
                priority: 2
                sprite: ice-cream-shop
                size: 40px

    # Basemap styling
    earth:
        data: { source: osm, layer: earth }
        draw:
            polygons:
                order: 0
                color: *earth1

    water:
        data: { source: osm, layer: water }
        draw:
            polygons:
                order: 5
                #color: *water1
        lakes:
            filter:
                all:
                    - kind: [ocean, lake, water, riverbank, reservoir]
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 1 },  area: { min: 40000000000 } }
                    - { $zoom: { min: 2 },  area: { min: 20000000000 } }
                    # some weird natural earth scale set transition
                    - { $zoom: { min: 3 },  area: { min: 80000000000 } }
                    - { $zoom: { min: 4 },  area: { min: 5000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 700000000 } }
                    - { $zoom: { min: 6 },  area: { min: 500000000 } }
                    - { $zoom: { min: 7 },  area: { min: 160000000 } }
                    - { $zoom: { min: 8 },  area: { min: 40000000 } }
                    - { $zoom: { min: 9 },  area: { min: 10000000 } }
                    - { $zoom: { min: 10 }, area: { min: 8000000 } }
                    - { $zoom: { min: 11 }, area: { min: 2000000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                polygons:
                    color: *water1
        other-water-areas:
            filter: { not: { kind: [ocean, lake, water, reservoir, playa] }, $zoom: { min: 11 }, area: { min: 100 } }
            draw:
                polygons:
                    color: *water1
        playas:
            filter: { kind: playa, $zoom: {min: 6} }
            draw:
                polygons:
                    color: *water2
        water_boundaries-ocean:
          filter: { boundary: yes, kind: ocean, $zoom: { min: 10 } }
          draw:
                lines:
                    order: 7
                    color: *water1_o
                    width: [[10,1px],[12,2px]]
                    join: round
        water_boundaries-not-ocean:
            filter: 
                all:
                    - boundary: yes
                    - not: { kind: ocean }
                    - $zoom: { min: 14 }
                any:
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                lines:
                    order: 6
                    color: *water2_o
                    width: [[14,1.0px],[16,1.5px],[18,2m]]
                    join: round
        river:
            filter: { kind: [river,canal,stream,dam,ditch,drain], $zoom: { min: 13 } }
            draw:
                lines:
                    order: 6
                    color: *water2_o
                    width: [[13,0.5px],[14,1.0px],[16,1.5px],[18,4m]]
                    join: round

    subway-light-rail:
        data: { source: osm, layer: transit }
        filter: { kind: [railway,subway,light_rail], $zoom: { min: 14 } }
        draw:
            lines:
                interactive: true
                order: function() { return (6 + feature.sort_key) | 6; }
        railway:
            filter: { kind: railway }
            draw:
                lines:
                    color: grey
                    width: [[14,1px],[16,2px],[18,3m]]
        subway:
            filter: { kind: subway }
            draw:
                lines:
                    color: *rail1
                    width: [[14,0.5px],[16,1px],[17,1.5px],[18,2m]]
        light_rail:
            filter: { kind: light_rail, $zoom: { min: 15 } }
            draw:
                lines:
                    color: grey
                    width: [[14,0.5px],[16,1px],[17,1.5px],[19,1m]]
                    order: 30

    railway-late:
        data: { source: osm, layer: roads }
        filter: { kind: rail, not: { railway: [subway,light_rail] } }
        draw:
            lines:
                interactive: true
                color: [[14,*rail1_e],[16,*rail1]]
                width: [[15,0.5px],[16,0.75px],[18,1m]]
        service:
            filter: { service: true }
            draw:
                lines:
                    color: *rail2
                    width: [[14,0px],[15,0.4px],[16,0.6px],[18,0.7m]]
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return 6 + feature.sort_key; }
                    # but give them all the same outline
                    outline:
                        order: 21 # 15 is the starting aboveground level, plus 6

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 6 + feature.sort_key; }

    roads:
        data: { source: osm, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
                #color: black
                width: 1px
            text:
                visible: false    # labels are enabled by each layer below
                font:
                    family: Helvetica
                    weight: 500

        # default outlines starting at zoom 16
        default-outline-width:
            filter: { $zoom: { min: 16 } }
            draw:
                lines:
                    outline:
                        width: function () { return 3/16 * Math.log($zoom); }

        natural_earth_highways:
            filter: { source: 'naturalearthdata.com' }
            draw:
                lines:
                    # put highways on top of all other roads
                    order: 8
                    cap: round
                    join: round
                    color: [[7,*highway1_e],[8,*major_road3]]
                    width: [[5, 1px], [7, 1.4px], [9, 2px], [14, 3px], [16, 4px], [17, 10m]]
                    outline:
                        color: *highway_casing1
            major_road:
                filter: { type: ['Secondary Highway','Road'] }
                draw:
                    lines:
                        color: *highway1_e
                        width: [[5, 0.45px], [6, 0.75px]]
            minor_road:
                filter: { type: 'Unknown' }
                draw:
                    lines:
                        # order: 3
                        color: [[12, *minor_road1], [17, *minor_road2]]
                        width: [[12, 1.0px], [14, 1.5px], [15, 3px], [16, 5m]]
            ferry:
                filter: { kind: Ferry }
                draw:
                    lines:
                        # order: 3
                        color: *ferry1
                        width: 1px
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    # put highways on top of all other roads
                    order: 8
                    #cap: [[0,butt],[15,round]]
                    #join: round
                    color: *highway1
                    width: [[8, 2px], [9, 2.5px], [14, 4.0px], [15, 6.0px], [16, 6.5px], [17, 20m]]
                    outline:
                        color: *highway_casing1
                        width: [[9, 0.5px], [12, 1px], [16, 2px], [18, 6px]]
            not_link:
                filter: { not: { is_link: yes }, $zoom: {max: 15} }
                draw:
                    lines:
                        order: function() { return 7 + feature.sort_key; }
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 7 + feature.sort_key; }
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        color: *highway_link1
                        width: [[9, 1px], [14, 2.5px], [16, 4px], [18, 9m]]
                        cap: butt
                        outline:
                            color: *highway_casing1
                            width: [[13, 0px], [14, 1px], [18, 1.5px]]
                early_link:
                    filter: { $zoom: {min: 13, max: 15} }
                    draw:
                        lines:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 7 + feature.sort_key; }
                tunnel-link:
                    filter: {is_tunnel: yes, $zoom: {min: 13} }
                    draw:
                        lines:
                            color: *highway_tunnel1
                            outline:
                                color: *highway_tunnel_casing1
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        color: *highway_tunnel1
                        outline:
                            color: *highway_tunnel_casing1
            highway_bridge:
                filter: {is_bridge: yes}
                draw:
                    lines:
                        cap: butt
            labels-highway-early:
                filter: { $zoom: [7,8,9] }
                draw:
                    text:
                        priority: 20
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: *text_fill
                            size: 8px
                            stroke: { color: *text_stroke_road1, width: 3 }
            labels-highway-z10:
                filter:
                    $zoom: 10
                draw:
                    text:
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: *text_fill
                            size: 9px
                            stroke: { color: *text_stroke_road1, width: 3 }
            labels-highway-z11:
                filter:
                    $zoom: 11
                draw:
                    text:
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: *text_fill
                            size: 10px
                            stroke: { color: *text_stroke_road1, width: 3 }
            labels-highway-z12:
                filter:
                    $zoom: 12
                draw:
                    text:
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: *text_fill
                            size: 10px
                            stroke: { color: *text_stroke_road1, width: 3 }
            labels-highway-z13:
                filter:
                    $zoom: 13
                draw:
                    text:
                        priority: 20
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 13px
                            stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z14:
                filter:
                    $zoom: 14
                draw:
                    text:
                        priority: 20
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: *text_fill
                            size: 11px
                            stroke: { color: *text_stroke_road1, width: 4 }
            labels-highway-z15:
                filter:
                    $zoom: 15
                draw:
                    text:
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill
                            size: 13px
                            #stroke: { color: *text_stroke_road1, width: 4 }
            later2:
                filter: { $zoom: { min: 16, max: 18 } }
                draw:
                    text:
                        priority: 20
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill
                            size: 15px
                            #stroke: { color: *text_stroke_road1, width: 4 }
            later3:
                filter: { $zoom: { min: 18 } }
                draw:
                    text:
                        priority: 20
                        visible: *text_visible_highway
                        font:
                            fill: *text_fill2
                            size: 18px
                            #stroke: { color: *highway1, width: 4 }

        major_road:
            filter: { kind: major_road }
            # default style
            draw:
                lines:
                    #cap: round
                    #join: round
                    color: [[8, *major_road4], [13, major_road2], [17, *major_road1]]
                    width: [[13, 0px], [14, 2px], [16, 2.5px], [19, 8m]]
                    outline:
                        color: [[0,*earth1_r],[13,*major_casing1]]
                        width: [[12, 0px], [13, .5px], [15, 1px]]
            trunk_primary:
                filter: { highway: [trunk, primary] }
                draw:
                    lines:
                        color: [[8, *major_road5], [9, *major_road2b], [13, *major_road2], [14, *major_road1c], [15, *major_road1b], [17, *major_road1]]
                        width: [[8, 0.6px], [9, 0.75px], [10, 1.5px], [13, 2.5px], [14, 4.5px], [15, 5.5px], [16, 7.0px], [19, 14m]]
                        outline:
                            width: [[8, 0px], [9, 0.5px], [10, 1px], [12, 1.25px], [14, 1.5px], [16, 2.5px], [18, 4.5px]]
                routes:
                    filter: { ref: true }
                    draw:
                        lines:
                            color: [[8,*major_road5],[9,*major_route2],[10,*major_route1]]
                            width: [[8, 1.0px], [9, 1.5px], [10, 2.0px], [14, 3.5px], [15, 4.5px], [16, 6.0px], [17, 12m]]
                            outline:
                                color: *highway_casing1
                                width: [[9, 0px], [10, 0.5px], [11, 0.75px], [12, 1px], [16, 2px], [18, 4.5px]]
                    national-routes:
                        filter: { network: [US:US, US:I] }
                        draw:
                            lines:
                                color: [[8,*major_route2],[9,*major_route2],[10,*major_route1]]
                                width: [[8, 2.0px], [10, 2.5px], [14, 3.5px], [15, 4.5px], [16, 6.0px], [17, 12m]]
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    z-order:
                        #filter: { $zoom: {min: 12} }
                        draw:
                            lines:
                                # let roads sort themselves past zoom 14
                                order: function() { return 8 + feature.sort_key; }
                                # but give them all the same outline
                                outline:
                                    order: 23 # 15 is the starting aboveground level, plus 8
                    labels-trunk_primary-route-z12:
                        filter: { $zoom: [12] }
                        draw:
                            text:
                                priority: 23
                                visible: *text_visible_trunk_primary_e
                                text_source: ref
                                font:
                                    fill: *text_fill
                                    size: 10px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                    labels-trunk_primary-route-z13-z14:
                        filter: { $zoom: [13,14] }
                        draw:
                            text:
                                priority: 23
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 11px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                    labels-trunk_primary-route-z15:
                        filter: { $zoom: [15] }
                        draw:
                            text:
                                priority: 23
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 12px
                                    stroke: { color: *text_stroke_road3, width: 2px }
                labels-trunk_primary-z11-z12:
                    filter:
                        $zoom: [11,12]
                    draw:
                        text:
                            priority: 23
                            visible: *text_visible_trunk_primary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z13-z14:
                    filter:
                        $zoom: [13,14]
                    draw:
                        text:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z15:
                    filter: { $zoom: [15] } #huh: , ref: false }
                    draw:
                        text:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 14px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z16:
                    filter: { $zoom: [16] }
                    draw:
                        text:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 14px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z17:
                    filter: { $zoom: [17] }
                    draw:
                        text:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 15px
                                stroke: { color: *text_stroke_road2, width: 4 }
                labels-trunk_primary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 16px
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        color: [[8, *major_road3], [9, *major_road2b], [14, *major_road2], [15, *major_road1b], [17, *major_road1]]
                        width: [[10, 1px], [14, 3px], [16, 4.5px], [18, 10m]]
                        outline:
                            color: *major_casing1
                            width: [[10, 1px], [14, 1px], [18, 1.5px]]
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        color: *major_tunnel1
                        outline:
                            color: *major_tunnel_casing1
            secondary:
                filter: { highway: secondary }
                draw:
                    lines:
                        color: [[13,*major_road3], [14,*major_road2b], [15,*major_road1b], [17,*major_road1]]
                        width: [[11, 1.0px], [12, 1.0px], [13, 2.0px], [14, 3.5px], [15, 4.5px], [16, 7.0px], [19, 16m]]
                        outline:
                            width: [[11, 0px], [12, .75px], [13, 1.0px], [14, 1.75px], [15, 2.0px], [16, 3.0px], [18, 4.0px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [[8,*major_road5],[9,*major_route2],[10,*major_route1]]  #*minor_route
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-secondary-routes:
                        filter: { $zoom: [13] }
                        draw:
                            text:
                                priority: 24
                                visible: *text_visible_secondary_e
                                text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    fill: *text_fill
                                    size: 13px
                                    stroke: { color: *text_stroke_road3, width: 2 }
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11,*green1_r],[12,*minor_road3],[14,*minor_road3]]
                            outline:
                                color: [[14,*green1_r],[15,*major_casing1]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                labels-secondary-z13:
                    filter: 
                        $zoom: [13,14]
                    draw:
                        text:
                            priority: 24
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 10px
                                stroke: { color: *text_stroke_road4, width: 2 }
                labels-secondary-z15:
                    filter: 
                        $zoom: [15]
                    draw:
                        text:
                            priority: 24
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road3, width: 3 }
                labels-secondary-z16:
                    filter: 
                        $zoom: [16]
                    draw:
                        text:
                            priority: 24
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 11px
                                stroke: { color: *text_stroke_road3, width: 3 }
                labels-secondary2:
                    filter: { $zoom: [17] }
                    draw:
                        text:
                            priority: 24
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 12px
                                # stroke: { color: *text_stroke, width: 4 }
                labels-secondary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text:
                            priority: 24
                            visible: *text_visible_secondary
                            #text_source: ref
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 13px
                                stroke: { color: *major_road1, width: 4 }
            tertiary:
                filter: { highway: [tertiary, tertiary_link] }
                draw:
                    lines:
                        color: [[13,*major_road2b], [14,*major_road2a], [15,*major_road1b], [17,*major_road1]]
                        width: [[11, 0.5px], [12, .75px], [14, 2.5px], [15, 4.0px], [16, 6.5px], [17, 7.5px], [19, 14m]]
                        outline:
                            width: [[11, 0px], [13, 0.5px], [14, 1.0px], [15, 1.5px], [16, 2.0px], [18, 3.5px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: *minor_route
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                link:
                    filter: { is_link: yes } # on- and off-ramps, etc
                    draw:
                        lines:
                            color: *major_road1
                            width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            outline:
                                color: [[12,*major_casing2],[13,*major_casing1]]
                                width: [[12, 0px], [14, .25px], [16, 1.0px], [18, 4.0px]]
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[11,*green1_r],[12,*minor_road3],[14,*minor_road3]]
                            outline:
                                color: [[14,*green1_r],[15,*major_casing1]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: *green1_r
                labels-tertiary-z14:
                    filter: { $zoom: [14] }
                    draw:
                        text:
                            priority: 25
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 10px
                                stroke: { color: *text_stroke_road4, width: 2 }
                labels-tertiary-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 12px
                                stroke: { color: *text_stroke_road3, width: 2 }
                labels-tertiary2:
                    filter: { $zoom: { min: 16, max: 18 } }
                    draw:
                        text:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill
                                size: 13px
                                #stroke: { color: *text_stroke_road3, width: 4 }
                labels-tertiary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: *text_fill2
                                size: 15px
                                #stroke: { color: *text_stroke_road3, width: 4 }
        minor_road:
            filter: { kind: minor_road, not: { highway: service, aeroway: [runway, taxiway] } }
            draw:
                lines:
                    #cap: round
                    #join: round
                    color: [[11, *minor_road5], [13, *minor_road4], [15, *minor_road3]]
                    width: [[11, 0.5px], [12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.5px], [16, 8m]]
                    outline:
                        width: [[14, 0px], [15, 0.5px], [17, 0.75px], [18, 1.5px], [19, 2px]]
                        color: [[16,*minor_casing1],[17,*minor_casing2]]
            early:
                filter: { $zoom: { max: 14 } }
                draw:
                    lines:
                        order: 15
            
            in_park:
                filter: { landuse_kind: [park,protected_area,nature_reserve,conservation,golf_course,garden,wood,farmland,farm] }
                draw:
                    lines:
                        #width: [[11, 0.5px], [12, 1.0px], [13, 1.2px], [14, 1.75px], [15, 2.5px], [16, 8m]]
                        color: [[11,*green1_r],[12,*green1_r],[14,*minor_road3]]
                        outline:
                            color: [[14,*green1_r],[18,*minor_casing1]]
                            width: [[12, 0px], [13, 0.5px], [14, 0.75px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #color: [[11,*brown1_re],[13,*brown1_r],[14,*minor_road3]]
                        outline:
                            color: *brown1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #color: [[11,*red1_r],[13,*red1_r],[14,*minor_road3]]
                        outline:
                            color: *red1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]

            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        cap: butt
                        color: *minor_tunnel1
                        outline:
                            color: *minor_tunnel_casing1
            minor_road_bridge:
                filter: {is_bridge: yes}
                draw:
                    lines:
                        cap: butt
            labels-minor_road:
                filter: { $zoom: { min: 16, max: 18 } }
                draw:
                    text:
                        priority: 26
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_road4, width: 3 }
            labels-minor_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text:
                        priority: 26
                        visible: *text_visible_minor_road
                        text_source: name
                        font:
                            fill: *text_fill2
                            size: 15px
                            #stroke: { color: *text_stroke_road4, width: 4 }
        service_road:
            filter: { kind: minor_road, highway: service }
            draw:
                lines:
                    # order: 3
                    #cap: round
                    #join: round
                    color: [[0,*service_road2],[18,*service_road2]]
                    width: [[13,0.5px],[15, 1px], [16, 1.5px], [18, 4m], [19, 4.5m]]
                    outline:
                        color: [[0,*service_road_casing1],[18,*service_road_casing2]]
                        width: [[15, 0px], [16, 0.5px], [17, 1.0px], [18, 1.75px]]
            in_park:
                filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        #color: *green1_r
                        outline:
                            color: *green1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: *green2_r
                            width: [[13, 0.25px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #color: *brown1_r
                        outline:
                            color: *brown1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #color: *red1_r
                        outline:
                            color: *red1_r
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            labels-service_road:
                filter: { $zoom: { min: 17, min: 18 } }
                draw:
                    text:
                        priority: 27
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            #stroke: { color: *text_stroke_road4, width: 4 }
            labels-service_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text:
                        priority: 27
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            fill: *text_fill2
                            size: 12px
                            #stroke: { color: *text_stroke_road4, width: 4 }
        path:
            filter: { kind: path, not: { highway: [steps,track] } }
            draw:
                lines:
                    color: [[14,*path2],[16,*path1]]
                    width: [[14, 1.0], [15, 1.5], [17, 3m]]
                    order: 6
                    #cap: butt
                    #join: round
                    outline:
                        color: *path_casing1
                        width: [[14, 0.0], [18, .1]]
            pedestrian:
                filter: { highway: pedestrian }
                draw:
                    lines:
                        color: [[13,*path2],[16,*path1]]
                        width: [[13, 1.5], [15, 1.5], [17, 3m]]
                        order: 7
                        #cap: butt
                        #join: round
                        outline:
                            color: *path_casing1
                            width: [[17, 0.5], [18, 1]]
            bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        cap: butt
                        width: [[15, 3.5], [17, 3m]]
                        outline:
                            color: [[15,*path_bridge_casing2],[16,*path_bridge_casing1]]
                            width: [[15, 0.5px], [16, 1.0px], [18, 2px]]
            in_park:
                # should `forest` and `wood` be included?
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[14,*green1_r],[16,*minor_road3]]
                        outline:
                            color: *green1_r
                            width: [[14, 0.1px], [15, 0.5px], [18, 2px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: *green1_r
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: *green2_r
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_zoo:
                filter: { landuse_kind: zoo }
                draw:
                    lines:
                        outline:
                            color: *green1_r
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[14,*brown1_r],[16,*minor_road3]]
                        outline:
                            color: *brown1_r
                            width: [[14, 0px], [16, 0.5px], [18, 2px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[14,*red1_r],[16,*minor_road3]]
                        outline:
                            color: *red1_r
                            width: [[14, 0px], [16, 0.5px], [18, 2px]]
            labels-path:
                filter: { $zoom: { min: 17 } }
                draw:
                    text:
                        priority: 28
                        visible: *text_visible_path
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_road4, width: 4 }
        track:
            filter: { kind: path, highway: track }
            draw:
                lines:
                    color: [[13, *minor_road4], [15, *minor_road3]]
                    width: [[13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 6m]]
                    #color: [[13,*minor_road4],[16,*minor_road3]]
                    #width: [[13, 1.0], [15, 1.5], [17, 3m]]
                    order: 6
                    cap: butt
                    join: round
                    outline:
                        color: *minor_casing1
                        width: [[14, 0px], [15, 0px], [16, 0.5px], [17, 1.0px], [18, 2.0px]]
            bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        cap: butt
                        width: [[15, 3.5], [17, 3m]]
                        outline:
                            color: [[15,*minor_casing2],[16,*minor_casing1]]
                            width: [[15, 0.5px], [16, 1.0px], [18, 2px]]
            in_park:
                filter: { landuse_kind: [park,national_park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        width: [[13, 0.5px], [14, 0.5px], [15, 1.0px], [16, 6m]]
                        outline:
                            color: [[16,*green1_r],[17,*major_casing1]]
                            width: [[14, 0px], [15, 0px], [16, 0.25px], [17, 0.5px], [18, 1.0px], [19, 2.0px]]
        steps:
            filter: { kind: path, highway: steps }
            draw:
                dashedline:
                    order: 23
                    #cap: round
                    #join: round
                    color: *path_steps1_b
                    width: [[14, 0.1], [17, 0.1]]
                    outline:
                        color: *path_steps1
                        width: [[14, 1.0], [15, 1.5], [18, 3m]]
            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    dashedline:
                        color: [[14,*green1_r],[16,*minor_road3]]
                        outline:
                            color: *green1_r
            in_university:
                filter: { landuse_kind: university }
                draw:
                    dashedline:
                        color: [[14,*brown1_r],[16,*minor_road3]]
                        outline:
                            color: *brown1_r
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    dashedline:
                        color: [[14,*red1_r],[16,*minor_road3]]
                        outline:
                            color: *red1_r
            labels-steps:
                filter: { $zoom: { min: 17 } }
                draw:
                    text:
                        priority: 29
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_road4, width: 4 }
#        airport-lines:
#            filter: { kind: minor_road, aeroway: [runway,taxiway] }
#            draw:
#                lines:
#                    order: 10
#                    color: *grey2
#                    cap: butt
#                    width: [[10, 1px], [11, 1.5px], [12, 2px], [13, 4px], [14, 8px], [15, 16px], [16, 32px], [17, 60m]]
#            # Features come in at zoom 9, but include mostly minor airports without POIs until z13
#            early:
#                filter: { $zoom: { max: 12 }, not: { landuse_kind: [aerodrome, runway, taxiway] } }
#                draw:
#                    lines:
#                        visible: false
#            not-round:
#                filter: { $zoom: { min: 17 } }
#                draw:
#                    lines:
#                        cap: butt
#            taxiway:
#                filter: { aeroway: taxiway }
#                draw:
#                    lines:
#                        order: 9
#                        color: *grey4
#                        width: [[14, 1px], [15, 1.5px], [16, 8m]]
#                early:
#                    filter: { $zoom: { max: 14 } }
#                    draw:
#                        lines:
#                            visible: false
        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    # order: 3
                    color: *ferry1
                    width: [[12, 1.0px], [14, 1.5px], [17, 3m]]
        aerialway:
            filter: { kind: aerialway }
            draw:
                lines:
                    order: 20
                    interactive: true
                    color: '#444'
                    width: [[14, 0.5px], [15, 1.0px], [16, 2m]]
            gondola_cable_car:
                draw:
                    lines:
                        color: black
                        width: [[12, 2.0px], [13, 1.75px], [14, 2.25px], [15, 3.0px], [16, 4m]]
            chair_lift:
                draw:
                    lines:
                        color: '#333'
                        width: [[13, 0.75px], [14, 1.5px], [15, 2.5px], [16, 3m]]
            aerialway-labels:
                filter: { $zoom: { min: 14 } }
                draw:
                    text:
                        priority: 29
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_park, width: 4 }
                minor:
                    filter: { not: { aerialway: [gondola, cable_car, chair_lift] }, $zoom: { max: 17 } }
                    draw:
                        text:
                            visible: false
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return 6 + feature.sort_key; }
                    # but give them all the same outline
                    outline:
                        order: 21 # 15 is the starting aboveground level, plus 6

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        #cap: butt
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return 6 + feature.sort_key; }

    city_walls:
        data: { source: osm, layer: boundaries }
        filter: { kind: city_wall }
        draw:
            lines:
                interactive: true
                order: 8
                color: *city_wall
                width: [[12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.0px], [16, 2.5px], [19, 6m]]
    retaining_wall:
        data: { source: osm, layer: boundaries }
        filter: { kind: retaining_wall }
        draw:
            lines:
                interactive: true
                order: 8
                color: *retaining_wall
                width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 4m]]

    # buildings are the only layer that gets lighting
    buildings:
        data: { source: osm, layer: buildings }
        filter: 
            any:
                # limit show smaller landuse areas to higher zooms
                - { $zoom: [13], area: { min: 100000 }, name: true }
                - { $zoom: [13], area: { min: 100000 }, kind: true }
                - { $zoom: [13], height: { min: 250 } }
                - { $zoom: [13], volume: { min: 250000 } }
                - { $zoom: [14], area: { min: 20000 }, name: true }
                - { $zoom: [14], area: { min: 20000 }, kind: true }
                - { $zoom: [14], area: { min: 5000 }, landuse_kind: true }
                - { $zoom: [14], height: { min: 150 } }
                - { $zoom: [14], volume: { min: 150000 } }
                - { $zoom: [15], area: { min: 5000 }, name: true }
                - { $zoom: [15], area: { min: 5000 }, kind: true }
                - { $zoom: [15], area: { min: 3000 }, landuse_kind: true }
                - { $zoom: [15], height: { min: 100 } }
                - { $zoom: [15], volume: { min: 100000 } }
                - { $zoom: [16], area: { min: 1000 }, name: true }
                - { $zoom: [16], area: { min: 1000 }, kind: true }
                - { $zoom: [16], area: { min: 2000 }, landuse_kind: true }
                - { $zoom: [16], volume: { min: 50000 } }
                #- { $zoom: [16], height: { min: 50 } }
                - { $zoom: { min: 17 } }
            all:
                - not: { location: underground }
#                - { $zoom: { max: 18 } }
        draw:
            #filter: { not: { location: underground } }
            polygons:
                order: function() { if( $zoom < 17) { return 5; } else { return 9; } }
                color: *building1
                extrude: *building_e
            outline:
                style: lines
                order: 10
                color: *building2
                width: [[14,0.1px],[15,0.5px],[17,0.5px],[18,0.75px],[19,0.25m]]
                extrude: *building_e
                tile_edges: true
        in_park:
            #todo: does forest belong here?
            filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
            draw:
                polygons:
                    color: *green1_b
                outline:
                    color: *green1_bo
            golf_course:
                filter: { landuse_kind: golf_course }
                draw:
                    outline:
                        color: *green1_r
            nature_reserve:
                filter: { landuse_kind: nature_reserve }
                draw:
                    outline:
                        color: *green1_r
            conservation:
                filter: { landuse_kind: conservation }
                draw:
                    outline:
                        color: *green1_r
            zoo:
                filter: { landuse_kind: zoo }
                draw:
                    outline:
                        color: *green1_r
        in_university:
            filter: { landuse_kind: [university,school] }
            draw:
                polygons:
                    color: *brown1_b
                outline:
                    color: *brown1_bo
        in_hospital:
            filter: { landuse_kind: hospital }
            draw:
                polygons:
                    color: *red1_b
                outline:
                    color: *red1_bo
#        in_retail:
#            filter: { landuse_kind: retail }
#            draw:
#                polygons:
#                    color: orange
                
    building-labels:
        data: { source: osm, layer: buildings }
        filter:
            all:
                - { $zoom: { min: 16 } }
                - $geometry: point
                - not: { location: underground }
                - kind: [false,building]
            any:
                - { $zoom: [16], area: { min: 5000 }, name: true }
                - { $zoom: [16], area: { min: 5000 }, kind: true }
                - { $zoom: [16], area: { min: 10000 }, landuse_kind: true }
                - { $zoom: [16], volume: { min: 50000 }, name: true }
                - { $zoom: [17], area: { min: 3000 }, name: true }
                - { $zoom: [18], area: { min: 1000 }, name: true }
                - { $zoom: [19], area: { min: 200 }, name: true }
                - { $zoom: { min: 20 }, name: true }
        draw:
            text:
                interactive: true
                order: 7
                font:
                    fill: *text_fill
                    family: Helvetica
                    style: italic
                    size: 12px
                    stroke: { color: *text_stroke_building, width: 4 }
        # Hack for no text wrap in Tangram
        building-labels-z16:
            filter: function() { if( $zoom == 16 && feature.name.length > 10 ) { return true; } else { return false; } }
            draw:
                text:
                    visible: false
        building-labels-z17:
            filter: function() { if( $zoom == 17 && feature.name.length > 20 ) { return true; } else { return false; } }
            draw:
                text:
                    visible: false
        building-labels-z20+:
            filter: { $zoom: { min: 20 } }
            draw:
                text:
                    text_source: function() { if( feature.addr_housenumber /*&& !feature.name.indexof(feature.addr_housenumber) > -1*/) { return feature.name + '\n' + feature.addr_housenumber; } else { return feature.name; } }
    address-labels:
        data: { source: osm, layer: buildings }
        filter: 
            all:
                - { $zoom: { min: 20 }, kind: address }
                - { $zoom: { min: 20 }, [ kind: true, addr_housenumber: true, name: false ] }
        draw:
            text:
                interactive: true
                order: 7
                visible: *text_visible_address
                text_source: addr_housenumber
                font:
                    fill: *text_fill_building
                    family: Helvetica
                    style: italic
                    size: 10px
                    stroke: { color: *building1, width: 4 }

    boundaries:
        data: { source: osm, layer: boundaries }
        # country subdivisions (states, provinces)
        draw:
            lines:
                interactive: true
                order: 11
#                color: red
#                width: [[8, 1px], [14, 2px], [16, 3px], [17, 8m]]
        country:
            filter:
                any:
                    - type: country
                    - kind: nation
                    - admin_level: 2
            draw:
                lines:
                    interactive: true
                    order: 13
                    color: *country_boundary
                    width: [[1, 0.5px], [2, 1.0px], [4, 1.5px], [9, 2.5px], [14, 3.5px], [16, 4.5px], [17, 14m]]
            water:
                filter: { maritime: yes }
                draw:
                    lines:
                        order: 9
                        color: blue
        region:
            filter:
                any:
                    - type: state
                    # territorial here is probably a hack
                    - kind: [state, department, region, provincial, territorial]
                    - admin_level: 4
            draw:
                lines:
                    interactive: true
                    order: 12
                    color: *region_boundary
                    width: [[2, 0.75px], [3, 1px], [5, 1.5px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]
            water:
                filter: { maritime_boundary: yes }
                draw:
                    lines:
                        visible: false
            early:
                filter: { scalerank: [0,3,4,5,6,7,8,9,10], $zoom: { max: 8 } }
                draw:
                    lines:
                        visible: false

#        subregions:
#            filter: { kind: county, $zoom: { min: 10 } }
#            draw:
#                lines:
#                    interactive: true
#                    order: 6
#                    color: *subregion_boundary
#                    width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]

    places:
        data: { source: osm, layer: places }
        filter: { not: { kind: [ocean, sea] } }
        draw:
            text:
                visible: false    # labels are enabled by each layer below
                font:
                    family: Helvetica
                    weight: 500

        continent:
            filter: { name: true, kind: [continent], $zoom: {max: 5} }
            draw:
                text:
                    visible: *text_visible_continent
                    font:
                        size: 13px
                        style: italic
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase

        country-early:
            filter: { name: true, population: true, kind: [country], $zoom: {min: 2, max: 6} }
            draw:
                text:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { if(feature["name:en"]) { return feature["name:en"].toUpperCase(); } else { return feature["name"].toUpperCase(); } }
                    font:
                        size: 11px
                        weight: 200
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
#                icons:
#                    size: [[13, 12px], [15, 18px]]
#                    interactive: true
#                    sprite: *townspot_sprite
            early-ones-z3:
                # US, Brazil, China, Russia, Canada, Greenland, Iceland, Australia, India, Japan, Guam, Indonesia, South Africa, Egypt, Nigeria, Kenya
                filter: { not: { name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"] }, $zoom: {min: 2, max: 4} }
                draw:
                    text:
                        visible: false
            early-ones-z4:
                filter: { name: [Nederland,Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,Crna Gora,Македонија,The Gambia,Burundi,Swaziland,الإمارات العربية المتحدة,العراق,Singapore,El Salvador,Belize,Trinidad and Tobago, Saint Lucia, Montserrat,Anguilla,República Dominicana,Bahamas,British Virgin Islands,Antigua and Barbuda,Grenada,Sint Maarten,Saint Kitts and Nevis,Cayman Islands,België - Belgique - Belgien], $zoom: {min: 4, max: 5} }
                draw:
                    text:
                        visible: false
            early-ones-z5:
                filter:
                    all:
                        - name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,El Salvador,Belize,België - Belgique - Belgien]
                        - $zoom: [5]
                        - population: true
                    any:
                        - population: { max: 5000000 }
                draw:
                    text:
                        visible: false

        country-z7:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: { min: 7, max: 10 } }
            draw:
                text:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { if(feature["name:en"]) { return feature["name:en"].toUpperCase(); } else { return feature["name"].toUpperCase(); } }
                    font:
                        size: 14px
                        weight: 800
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
#                icons:
#                    size: [[13, 12px], [15, 18px]]
#                    interactive: true
#                    sprite: *townspot_sprite
            small-ones-z7:
                filter: { name: [Liechtenstein,San Marino,Civitatis Vaticanæ,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 7, max: 8} }
                draw:
                    text:
                        visible: false

        region-z4:
            filter: { name: true, kind: [state], $zoom: [4], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 10px
                        weight: 200
                        fill: *text_fill

        region-z5:
            filter: { name: true, kind: [state], $zoom: [5], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 13px
                        weight: 200
                        fill: *text_fill

        region-z6:
            filter: { name: true, kind: [state], $zoom: [6], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 15px
                        weight: 200
                        fill: *text_fill
        region:
            filter: { name: true, kind: [state], $zoom: {min: 6, max: 9} }
            draw:
                text:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: function() { if(feature["name:short"]) { return feature["name"]; } else { return "" } }
                    font:
                        size: 14px
                        weight: 800
                        fill: *text_fill
                        stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            pesky:
                filter: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"], $zoom: {min: 6, max: 8} }
                draw:
                    text:
                        visible: false
            small-ones:
                filter: { name: ["Delaware","New Jersey","Connecticut","Rhode Island","Massachusetts","New Hampshire","Vermont"], $zoom: {min: 6, max: 8} }
                draw:
                    text:
                        text_source: function() { return feature["name:abbreviation"] || feature["name"]; }
                        font: { transform: uppercase }

        populated-places:
            draw:
                text:
                    offset: [0, 8px]
                    font:
                        stroke: { color: *text_stroke, width: 3 }

            populated-places-natural-earth-z2:
                filter: { name: true, source: naturalearthdata.com, $zoom: [2], scalerank: 0 }
                draw:
                    text:
                        priority: 5
                        interactive: true
                        visible: *text_visible_populated_places
                        font:
                            size: 10px
                            fill: *text_fill
                            # stroke: { color: *text_stroke, width: 4 }
                    icons:
                        size: 7px
                        interactive: true
                        visible: *icon_visible_populated_places
                        sprite: townspot-xs-rev

            populated-places-natural-earth-z3:
                filter: { name: true, source: naturalearthdata.com, $zoom: [3], scalerank: [0,1] }
                draw:
                    text:
                        priority: 5
                        interactive: true
                        visible: *text_visible_populated_places
                        font:
                            size: 11px
                            fill: *text_fill
                            # stroke: { color: *text_stroke, width: 4 }
                    icons:
                        size: 7px
                        interactive: true
                        visible: *icon_visible_populated_places
                        sprite: townspot-xs-rev

            populated-places-natural-earth-z4:
                filter: { name: true, source: naturalearthdata.com, $zoom: [4] }
                z4places-1:
                    filter: { scalerank: [0] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev

                z4places-2:
                    filter: { scalerank: [1,2] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev

            populated-places-natural-earth-z5:
                filter: { name: true, source: naturalearthdata.com, $zoom: [5] }
                draw: { text: { font: { fill: *text_fill } } }
                z5places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 13px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 13px
                            icons:
                                sprite: capital-m

                z5places-2:
                    filter: { scalerank: [2,3,4] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 13px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 11px

            populated-places-natural-earth-z6:
                filter: { name: true, source: naturalearthdata.com, $zoom: [6] }
                draw: { text: { font: { fill: *text_fill } } }
                z6places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 15px
                        icons:
                            size: 13px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 15px
                            icons:
                                sprite: capital-m

                z6places-2:
                    filter: { scalerank: [2,3,4] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 12px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 15px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px

                z6places-3:
                    filter: { scalerank: [5,6] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 10px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 10px

            populated-places-natural-earth-z7:
                filter: { name: true, source: naturalearthdata.com, $zoom: [7] }
                draw: { text: { font: { fill: *text_fill } } }
                z7places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z7places-2:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px

                z7places-3:
                    filter: { scalerank: [6,7] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px

            populated-places-osm-z8:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [8]
                draw: { text: { font: { fill: *text_fill } } }

                z8places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                z8places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 13px
            
                z8places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 11px
                        icons:
                            size: 9x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px

                z8places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 8px
                        icons:
                            size: 8x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 10px
                z8places-5:
                    filter:
                        all:
                            - { population: { max: 50000 } }
                        any:
                            - { capital: yes }
                            - { state_capital: yes }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 8px
                        icons:
                            size: 8x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 10px
                                    
            populated-places-natural-earth-z8-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [8], population: { max: 50000 } }
                draw: { text: { font: { fill: *text_fill } } }
                z8places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z8places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px

                z8places-3-ne:
                    filter: { scalerank: [6,7] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px
                                    
            populated-places-osm-z9:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [9]
                draw: { text: { font: { fill: *text_fill } } }

                z9places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 17px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 17px
                            icons:
                                sprite: capital-m

                z9places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 17px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 15px

                z9places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 15px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 13px

                z9places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 9px
                        icons:
                            size: 8x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 13px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 11px

                z9places-5:
                    filter:
                        all:
                            - { population: { max: 50000 } }
                        any:
                            - { capital: yes }
                            - { state_capital: yes }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 9px
                        icons:
                            size: 8x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 13px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 11px

            populated-places-natural-earth-z9-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [9], population: { max: 50000 } }
                draw: { text: { font: { fill: *text_fill } } }
                z9places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z9places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px

                z9places-3-ne:
                    filter: { scalerank: [6,7,8,9] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px

            populated-places-osm-z10:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [10]
                draw: { text: { font: { fill: *text_fill } } }
                
                z10places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 17px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev

                z10places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev

                z10places-3:
                    filter:
                        any:
                            - { population: { min: 50000, max: 149999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev

                z10places-4:
                    filter:
                        any:
                            - { population: { min: 35000, max: 49999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 9px
                        icons:
                            size: 8x
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-xs-rev

            populated-places-natural-earth-z10-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [10], population: { max: 35000 } }
                draw: { text: { font: { fill: *text_fill } } }
                z10places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z10places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px

                z10places-3-ne:
                    filter: { scalerank: [6,7,8,9,10] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px

            populated-places-osm-z11:
                filter: 
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] } 
                        - $zoom: [11]
                        - kind: [city,town]
                draw: { text: { font: { fill: *text_fill } } }

                z11places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: false
                            font:
                                size: 18px

                z11places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 14px

                z11places-3:
                    filter:
                        any:
                        - { population: { min: 10000, max: 49999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 10px

            populated-places-natural-earth-z11-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [11], population: { max: 10000 } }
                draw: { text: { font: { fill: *text_fill } } }
                z11places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z11places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px

                z11places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px

            populated-places-osm-z12:
                filter: 
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] } 
                        - $zoom: [12]
                        - kind: [city,town]
                draw: { text: { font: { fill: *text_fill, weight: 600 } } }

                z12places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                        
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 18px

                z12places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 14px

                z12places-3:
                    filter:
                        any:
                        - { population: { min: 7000, max: 49999 } }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px

            populated-places-natural-earth-z12-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [12], population: { max: 7000 } }
                draw: { text: { font: { fill: *text_fill } } }
                z12places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z12places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px

                z12places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11,12] }
                    draw:
                        text:
                            priority: 5
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            visible: *icon_visible_populated_places
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text:
                                font:
                                    size: 14px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text:
                                font:
                                    size: 12px
                                    
            populated-places-osm:
                filter: { name: true, source: openstreetmap, not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }, $zoom: { min: 13 } }
                draw:
                    text:
                        priority: 5
                        interactive: true
                        visible: *text_visible_populated_places
                        font:
                            size: 12px
                            fill: *text_fill
                            stroke: { color: *text_stroke, width: 4 }
                            weight: 600


                z13places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                        
                    draw:
                        text:
                            font:
                                size: 18px
                    z14:
                        filter: { $zoom: { min: 14 } }
                        draw:
                            text:
                                visible: false

                z13places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text:
                            font:
                                size: 14px
                    z14:
                        filter: { $zoom: { min: 14 } }
                        draw:
                            text:
                                visible: false

                z13places-3:
                    filter:
                        any:
                        - { population: { min: 7000, max: 49999 } }
                    draw:
                        text:
                            font:
                                size: 13px

                z13places-4:
                    filter:
                        any:
                            - population: false
                            - population: true
                              all:
                                - population: { max: 7000 }
                    draw:
                        text:
                            font:
                                size: 12px

                # nix major cities under z15
                major-places:
                    filter: { kind: [city], $zoom: { min: 13, max: 15 } }
                    visible: false
                    draw:
                        text:
                            font:
                                size: 14px
                major-places:
                    filter: { kind: [city], $zoom: { min: 15 } }
                    visible: false
                    draw:
                        text:
                            visible: false
                            font:
                                size: 14px
                medium-places:
                    filter: { kind: [town], $zoom: { max: 11 } }
                    visible: false
                # nix podunk burgs under z15
                minor-places-village:
                    filter: { kind: [village], $zoom: { max: 12 } }
                    visible: false
                # mobile home parks, really?
                minor-places-hamlet:
                    filter: { kind: [hamlet], $zoom: { max: 16 } }
                    visible: false
                # These aren't compatible with WOF neighbourhoods (see London)
                minor-places-locality:
                    filter: { kind: [locality], $zoom: { min: 12 } }
                    visible: false

            neighborhood-z11:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [11]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11]
                            - max_zoom: { min: 12 }
                            - is_landuse_aoi: false
                            #- kind_tile_rank: { max: 6 }
                draw:
                    text:
                        priority: 6
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 9px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 2 }
            neighborhood-z12:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [12]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12]
                            - max_zoom: { min: 13 }
                            - is_landuse_aoi: false
                            #- kind_tile_rank: { max: 8 }
                draw:
                    text:
                        priority: 6
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 9px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 2 }
            neighborhood-z13:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [13]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13]
                            - max_zoom: { min: 14 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text:
                        priority: 6
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 10px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }
            neighborhood-z14:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [14]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14]
                            - max_zoom: { min: 15 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text:
                        priority: 6
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 11px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }
            neighborhood-z15:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [15]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14,15]
                            - max_zoom: { min: 16 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text:
                        priority: 6
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 13px
                            weight: 200
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }

            neighborhood-z16:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [16]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14,15,16]
                            - max_zoom: { min: 17 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text:
                        priority: 6
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 14px
                            weight: 200
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 3 }


    pois_and_landuse_labels:
        data: { source: osm, layer: [pois,landuse,buildings] }
        visible: *label_visible_poi_landuse
        filter: 
            not: { kind: [building,farm,peak,tree,gate,address] }
            any:
                - area: false
                  all:
                      - $zoom: { min: 12 }
                - area: true
                  all:
                      - $geometry: point
                      - kind: true
        draw:
            icons:
                size: [[13, 14px], [16, 16px], [19, 20px]]
                interactive: true
                visible: false
                priority: 10
            text:
                visible: false    # labels are enabled by each layer below
                move_into_tile: false
                offset: [[13,13px],[14,15px],[16,19px]]
                interactive: true
                priority: 11
                font:
                    family: Helvetica
                    weight: 500
                    fill: *text_fill
                    size: 12px
                    stroke: { color: *text_stroke, width: 4 }
        no-name:
            filter: { name: false }
            sports-pitch:
                filter: { kind: [grass, pitch], $geometry: point, area: true, $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.sport }
                        visible: *icon_visible_poi_landuse_e
                baseball:
                    filter: { sport: baseball }
                    draw: { icons: { sprite: baseball-field } }
                basketball:
                    filter: { sport: basketball }
                    draw: { icons: { sprite: basketball-court } }
                football:
                    filter: { sport: football }
                    draw: { icons: { sprite: football-stadium } }
                hockey:
                    filter: { sport: hockey-field }
                    draw: { icons: { sprite: hockey-field } }
                soccer:
                    filter: { sport: soccer }
                    draw: { icons: { sprite: soccer-field } }
                tennis:
                    filter: { sport: tennis }
                    draw: { icons: { sprite: tennis } }
            traffic-signal:
                filter: { kind: traffic_signals, $zoom: { min: 18 } }
                draw:   { icons: { sprite: traffic-signal, visible: *icon_visible_poi_landuse_e } }
            bicycle-parking:
                filter: { kind: [bicycle_parking], $zoom: { min: 19 } }
                draw:   { icons: { sprite: bicycle-parking, visible: *icon_visible_poi_landuse_e } }
        has-name:
            filter: { name: true }
            # match 1:1 correlations between data and sprite name
            direct-match:
                filter: { area: false }
                draw:
                    icons:
                        # sprite_source: kind
                        sprite: function() { return feature.kind; }
                        visible: *icon_visible_poi_landuse
                        interactive: true

            # add generic icon at high zoom, if direct match fails
            generic-icons:
                filter: { $zoom: { min: 18 }, area: false }
                draw:
                    icons:
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        interactive: true
                        priority: 12

            # add generic icon at high zoom
            default-label-text:
                filter: { $zoom: { min: 18 }, area: false }
                draw:
                    text:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        priority: 13
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
            landuse-labels-green-areas-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [national_park, "park or protected land"]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [4],  area: { min: 3000000000 } }
                        - { $zoom: [5],  area: { min: 3000000000 } }
                        - { $zoom: [6],  area: { min: 500000000 } }
                        - { $zoom: [7,8,9],  area: { min: 100000000 } }
                        - { $zoom: [10], area: { min: 50000000 } }
                        - { $zoom: [11], area: { min: 25000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 200000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        - { $zoom: { min: 15 } }
                national-park:
                    filter: function() { return feature.name && feature.name.indexOf("National Park") > -1; }
                    visible: *label_visible_landuse_green
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            interactive: true
                        text:
                            visible: *text_visible_landuse_green
                            interactive: true
                            offset: [0, 14px]
                            font:
                                fill: *text_fill_park
                                size: 12px
                                style: italic
                                stroke: { color: *text_stroke_park, width: 4 }
            landuse-labels-green-areas-not-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, forest, grass]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5],    area: { min: 10000000000 } }
                        - { $zoom: [6,7],  area: { min: 5000000000 } }
                        - { $zoom: [8],    area: { min: 1000000000 } }
                        - { $zoom: [9],    area: { min: 100000000 } }
                        - { $zoom: [10],   area: { min: 50000000 } }
                        - { $zoom: [11],   area: { min: 25000000 } }
                        - { $zoom: [12],   area: { min: 5000000 } }
                        - { $zoom: [13],   area: { min: 200000 } }
                        - { $zoom: [14],   area: { min: 50000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                visible: *label_visible_landuse_green
                draw:
                    icons:
                        visible: *icon_visible_landuse_green
                        sprite: forest
                        interactive: true
                    text:
                        visible: *text_visible_landuse_green
                        interactive: true
                        offset: [0, 14px]
                        font:
                            fill: *text_fill_park
                            size: 12px
                            style: italic
                            stroke: { color: *text_stroke_park, width: 4 }
                wilderness-areas-early:
                   filter: function() { return $zoom < 10 && feature.name && (feature.name.indexOf("Wilderness") > -1 || feature.name.indexOf("BLM") > -1) }
                   draw:
                       text: { visible: false }
                       icons: { visible: false }
                early-not-national-park:
                    filter: { not: { kind: national_park }, $zoom: { max: 6 } }
                    draw:
                        text: { visible: false }
                        icons: { visible: false }
                not-national-park:
                    filter: function() { return feature.name && feature.name.indexOf("Park") > -1 && !feature.name.indexOf("National Park") > -1}
                    draw:
                        icons:
                            sprite: park
                    early:
                        filter: { $zoom: { max: 8 } }
                        draw:
                            text: { visible: false }
                            icons: { visible: false }
                forest:
                    filter: function() { return $zoom < 8 && ((feature.name && feature.name.indexOf("Forest") > -1) || feature.protect_class >=6) }
                    draw:
                        text: { visible: false }
                        icons: { visible: false }
                hide-till-later:
                    filter: { kind: [grass], $zoom: { max: 16 } }
                    draw:
                        text: { visible: false }
                        icons: { visible: false }
                only-text-later:
                    filter: { kind: [grass], $zoom: { min: 16 } }
                    draw:
                        text: { font: { style: italic } }
                        icons: { visible: false }
            airport:
                filter:
                    all:
                        - kind: [airport, aerodrome]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],  area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 10000000 } }
                        - { $zoom: [11], area: { min: 5000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 500000 } }
                        - { $zoom: [14], area: { min: 20000 } }                    
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    text:
                        visible: *text_visible_landuse_green
                        interactive: true
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                    icons:
                        sprite: airport
                        visible: *icon_visible_landuse_green
                        interactive: true
                early:
                    filter: { $zoom: { max: 12 } }
                    # todo: huh?
                    draw: { text: { text_source: ref } }
            university:
                filter:
                    all:
                        - kind: [university,college]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],   area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                visible: *label_visible_landuse_green
                draw:
                    text:
                        visible: *text_visible_landuse_green
                        interactive: true
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                    icons:
                        sprite: college-university
                        visible: *icon_visible_landuse_green
                        interactive: true
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { text: { font: { size: 11px } } }
            landuse-labels-not-green-areas:
                filter:
                    all:
                        - $zoom: { min: 6 }
                        - area: true
                        - $geometry: point
                        - not: { kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, airport, aerodrome, university, college] }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5,6,7], area: { min: 5000000000 } }
                        - { $zoom: [8],     area: { min: 1600000000 } }
                        - { $zoom: [9],     area: { min: 400000000 } }
                        - { $zoom: [10],    area: { min: 100000000 } }
                        - { $zoom: [11],    area: { min: 25000000 } }
                        - { $zoom: [12],    area: { min: 5000000 } }
                        - { $zoom: [13],    area: { min: 1000000 } }
                        - { $zoom: [14],    area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15],    area: { min: 5000 } }
                        - { $zoom: [16],    area: { min: 2000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    text:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        interactive: true
                building-like:
                    filter: { kind: [commercial,residential,warehouse,public,dormitory], osm_relation: false }
                    draw:
                        icons:
                            sprite: building
                residential-relations-paris-wtf:
                    filter: { kind: [residential], osm_relation: true }
                    draw:
                        icons:
                            text: { visible: true, text_source: short_name, font: { fill: red } }
                            icons: { visible: false }
                hide-till-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { max: 17 } }
                    draw:
                        text: { visible: false }
                        icons: { visible: false }
                only-text-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { min: 17 } }
                    draw:
                        text: { font: { style: italic } }
                        icons: { visible: false }
            university-poi:
                filter: { kind: [university], area: false, $zoom: { max: 16 } }
                draw:
                    text:  { visible: false }
                    icons: { visible: false }
            office-early:
                filter: 
                    any:
                        - { kind: [insurance, office, company], $zoom: [15], area: { max: 10000 } }
                        - { kind: [insurance, office, company], $zoom: [16], area: { max: 5000 } }
                draw:
                    text:  { visible: false }
                    icons: { visible: false }
            bank-early:
                filter: { kind: [bank], $zoom: { max: 17 } }
                draw:
                    text:  { visible: false }
                    icons: { visible: false }
            post-office-early:
                filter: { kind: [post_office], $zoom: { max: 14 } }
                draw:
                    text:  { visible: false }
                    icons: { visible: false }
            atm-early:
                filter: { kind: [atm], $zoom: { max: 18 } }
                draw:
                    text:  { visible: false }
                    icons: { visible: false }
            memorial-early:
                filter: { kind: [memorial], $zoom: { max: 13 } }
                draw:
                    text:  { visible: false }
                    icons: { visible: false }
            parking-labels-early:
                filter:
                    kind: [parking]
                    $zoom: { max: 18 }
                draw:
                    text:
                        visible: false
                    icons:
                        visible: false
            parking-labels:
                filter:
                    kind: [parking]
                    $zoom: { min: 18 }
                draw:
                    text:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
            landuse-funky:
                filter: { kind: [commercial, residential, wood], $zoom: { max: 17 } }
                draw:
                    text:
                        visible: false
            car-sharing:
                filter: { kind: car_sharing }
                icons-early:
                    filter: { $zoom: { max: 17 } }
                    draw:
                        icons:
                            visible: false
                text-labels-early:
                    filter: { $zoom: { max: 19 } }
                    draw:
                        text:
                            visible: false
            station-train-subway:
                filter: { kind: [station, train-station, train_station], $zoom: { min: 11 } }
                visible: *label_visible_station
                draw:   { icons: { visible: *icon_visible_station, sprite: train-station, size: [[13,12px],[14,14px],[15,16px],[17,20px]] }, text: { visible: *text_visible_station } }
                low-priority-early:
                    filter: { kind_tile_rank: { min: 5 }, area: false, $zoom: { min: 0, max: 14 } }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 10px], [14, 10px], [15, 16px]]
                        text: { visible: false } 
                low-priority-early-z14:
                    filter: { kind_tile_rank: { min: 7 }, area: false, $zoom: { min: 14, max: 15 } }
                    draw:
                        icons:
                            size: [[12, 10px], [14, 10px], [15, 16px]]
                            #visible: false
                        text: { visible: false } 
            tram-stop-early:
                filter: { kind: tram_stop, $zoom: { max: 15 } }
                draw:
                    icons:
                        visible: false
            tram-stop-early-z15:
                filter: { kind: tram_stop, $zoom: [15] }
                draw:
                    text:
                        visible: false
            tram-stop:
                filter: { kind: tram_stop, $zoom: { min: 15 } }
                draw:
                    icons:
                        size: [[13, 12px], [16, 18px]]
            bus-stop-bus-station-labels:
                filter:
                    kind: [bus_stop, bus_station]
                    $zoom: { min: 18 }
                draw:
                    text:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                bus_stop:
                    filter:
                        kind: [bus_stop]
                        $zoom: { max: 19 }
                    draw:
                        text:
                            visible: false
                        icons:
                            size: [[13, 8px], [19, 18px]]

            # examples of different icons mapped to feature properties
            icons:
                adult-boutique:
                    filter: { kind: [erotic, adult_boutique] }
                    draw:   { icons: { sprite: adult-boutique } }
                allotments:
                    filter: { kind: [allotments] }
                    draw:   { icons: { sprite: garden } }
                airport:
                    filter: { kind: [airport, aerodrome] }
                    draw:   { icons: { sprite: airport } }
                animal-shelter:
                    filter: { kind: [animal_shelter, animal-shelter, animal_boarding] }
                    draw:   { icons: { sprite: animal-shelter } }
                antique-shop:
                    filter: { kind: [antiques, antique-shop] }
                    draw:   { icons: { sprite: antique-shop } }
                art-gallery:
                    filter: { kind: [art_gallery, art-gallery, art] }
                    draw:   { icons: { sprite: art-gallery } }
                athletics-sports:
                    filter: { kind: [athletic_sports, recreation_ground, sports_centre] }
                    draw:   { icons: { sprite: athletics-sports } }
                automotive-shop:
                    filter: { kind: [car_repair, automotive-shop, automotive, tyres] }
                    draw:   { icons: { sprite: automotive-shop } }
                bakery:
                    filter: { kind: [bakery, pastry, chocolate] }
                    draw:   { icons: { sprite: bakery } }
                bar:
                    filter: { kind: [pub, bar] }
                    draw:   { icons: { sprite: bar } }
                beer-garden:
                    filter: { kind: [biergarten, beer-garden, brewery] }
                    draw:   { icons: { sprite: beer-garden } }
                bike-shop:
                    filter: { kind: [bicycle, bicycle_rental, bike, bike_shop] }
                    draw:   { icons: { sprite: bike-shop } }
                boat-ferry:
                    filter: { kind: [ferry_terminal, boat-ferry, ferry-boat, ferry] }
                    draw:   { icons: { sprite: boat-ferry } }
                boat-ramp:
                    filter: { kind: [slipway, boat-ramp, boat_ramp] }
                    draw:   { icons: { sprite: boat-ramp } }
                bookstore:
                    filter: { kind: [books, bookstore] }
                    draw:   { icons: { sprite: bookstore } }
                bowling-alley:
                    filter: { kind: [bowling_alley, bowling-alley] }
                    draw:   { icons: { sprite: bowling-alley } }
                bridal-shop:
                    filter: { kind: [bridal, bridal-shop] }
                    draw:   { icons: { sprite: bridal-shop } }
                building-icon:
                    filter: { kind: [building, auditorium, terminal, hangar, retirement_home, manor, recreation_center, apartments] }
                    draw:   { icons: { sprite: building } }
                    early:
                        filter:
                            any:
                                # show labels for smaller landuse areas at higher zooms
                                - { $zoom: [14], area: { max: 200000 } }
                                - { $zoom: [15], area: { max: 20000 } }
                                - { $zoom: [16], area: { max: 5000 } }
                                - { $zoom: [17], area: { max: 1000 } }
                        draw:
                            text:
                                visible: false
                            icons:
                                visible: false
                burger:
                    filter: { kind: [fast_food, burger] }
                    draw:   { icons: { sprite: burger } }
                bus-station:
                    filter: { kind: [bus_stop, bus_station] }
                    draw:   { icons: { sprite: bus-station } }
                camera-store:
                    filter: { kind: [camera, camera-store, photo] }
                    draw:   { icons: { sprite: camera-store } }
                campground:
                    filter: { kind: [campground, camp_site, caravan_site] }
                    draw:   { icons: { sprite: campground } }
                candy-store:
                    filter: { kind: [candy, candy-store, confectionery] }
                    draw:   { icons: { sprite: candy-store } }
                car-dealership:
                    filter: { kind: [car, car-dealership] }
                    draw:   { icons: { sprite: car-dealership } }
                car-wash:
                    filter: { kind: [car_wash, car-wash] }
                    draw:   { icons: { sprite: car-wash } }
                castle:
                    filter: { kind: [castle, fort] }
                    draw:   { icons: { sprite: castle } }
                cemetery:
                    filter: { kind: [grave_yard, cemetery] }
                    draw:   { icons: { sprite: cemetery } }
                cheese-shop:
                    filter: { kind: [cheese, cheese-shop] }
                    draw:   { icons: { sprite: cheese-shop } }
                clothing-store:
                    filter: { kind: [clothes, chothing-store, "clothes store", fashion] }
                    draw:   { icons: { sprite: clothing-store } }
                coffee-shop:
                    filter: { kind: [cafe, coffee-shop] }
                    draw:   { icons: { sprite: coffee-shop } }
                college-university:
                    filter: { kind: [university, college, college-university], area: false }
                    draw:   { icons: { sprite: college-university } }
                concert-hall:
                    filter: { kind: [music_venue] }
                    draw:   { icons: { sprite: concert-hall } }
                convenience-store:
                    filter: { kind: [convenience, convenience-store, convenience_store, beverages] }
                    draw:   { icons: { sprite: convenience-store } }
                cosmetics-shop:
                    filter: { kind: [cosmetics, cosmetics-shop, beauty] }
                    draw:   { icons: { sprite: cosmetics-shop } }
                department-store:
                    filter: { kind: [department_store, department-store] }
                    draw:   { icons: { sprite: department-store } }
                dog-run:
                    filter: { kind: [dog_park, dog_run, dog-run] }
                    draw:   { icons: { sprite: dog-run } }
                dry-cleaning:
                    filter: { kind: [dry_cleaning] }
                    draw:   { icons: { sprite: dry-cleaning } }
                electronics-store:
                    filter: { kind: [electronics, electronics-store, computer] }
                    draw:   { icons: { sprite: electronics-store } }
                factory:
                    filter: { kind: [factory, industrial, chimney, sub_station, substation, wastewater_plant, works, water_works, plant, generator] }
                    draw:   { icons: { sprite: factory } }
                farmers-market:
                    filter: { kind: [farmers_market, farmers-market] }
                    draw:   { icons: { sprite: farmers-market } }
                fire-station:
                    filter: { kind: [fire_station, fire-station] }
                    draw:   { icons: { sprite: fire-station } }
                fish-market:
                    filter: { kind: [fish, fish-market, seafood, fishmonger] }
                    draw:   { icons: { sprite: fish-market } }
                fishing-spot:
                    filter: { kind: [fishing_spot, fishing-spot, fishing] }
                    draw:   { icons: { sprite: fishing-spot } }
                fitness:
                    filter: { kind: [gym, fitness, fitness_center] }
                    draw:   { icons: { sprite: fitness } }
                flea-market:
                    filter: { kind: [flea_market, flea-market] }
                    draw:   { icons: { sprite: flea-market } }
                flower-shop:
                    filter: { kind: [florist, flower-shop] }
                    draw:   { icons: { sprite: flower-shop } }
                forest:
                    filter: { kind: [forest, conservation, wood] }
                    draw:   { icons: { sprite: forest } }
                furniture-store:
                    filter: { kind: [furniture, furniture-store] }
                    draw:   { icons: { sprite: furniture-store } }
                garden-center:
                    filter: { kind: [garden_centre, garden_center] }
                    draw:   { icons: { sprite: garden-center } }
                gas-station:
                    filter: { kind: [fuel, gas-station] }
                    draw:   { icons: { sprite: gas-station } }
                general-entertainment:
                    filter: { kind: [ticket, general_entertainment] }
                    draw:   { icons: { sprite: general-entertainment } }
                generic:
                    filter: { kind: [generic] }
                    draw:   { icons: { sprite: generic } }
                gift-shop:
                    filter: { kind: [gift, gift-shop] }
                    draw:   { icons: { sprite: gift-shop } }
                golf-course:
                    filter: { kind: [golf-course, golf_course] }
                    draw:   { icons: { sprite: golf-course } }
                government-building:
                    filter: { kind: [townhall, public_building, embassy] }
                    draw:   { icons: { sprite: government-building } }
                grocery-store:
                    filter: { kind: [supermarket, grocery-store, health_food, greengrocer] }
                    draw:   { icons: { sprite: grocery-store } }
                harbor-marina:
                    filter: { kind: [marina, harbor, harbor-marina, harbor_marina, dock, mooring] }
                    draw:   { icons: { sprite: harbor-marina } }
                hardware-store:
                    filter: { kind: [hardware, hardware-store, doityourself, paint] }
                    draw:   { icons: { sprite: hardware-store } }
                hiking-trail:
                    filter: { kind: [trailhead, hiking_trail] }
                    draw:   { icons: { sprite: hiking-trail } }
                hotel:
                    filter: { kind: [hotel, motel, hostel] }
                    draw:   { icons: { sprite: hotel } }
                hunting-supply:
                    filter: { kind: [hunting, fishing] }
                    draw:   { icons: { sprite: hunting-supply } }
                ice-cream-shop:
                    filter: { kind: [ice_cream] }
                    draw:   { icons: { sprite: ice-cream-shop } }
                information:
                    filter: { kind: [info, information] }
                    draw:   { icons: { sprite: information } }
                jewelry-store:
                    filter: { kind: [jewelry, jewelry_store, jewelry-store] }
                    draw:   { icons: { sprite: jewelry-store } }
                landmark:
                    filter: { kind: [landmark, memorial, monument, wayside_shrine, beacon] }
                    draw:   { icons: { sprite: landmark } }
                tower:
                    filter: { kind: [tower], label_placement: false }
                    draw:   { icons: { sprite: landmark } }
                tower:
                    filter: { kind: [tower], label_placement: yes }
                    draw:   { icons: { visible: false }, text: { font: { style: italic } } }
                laundry:
                    filter: { kind: [laundry] }
                    draw:   { icons: { sprite: laundry } }
                light-rail:
                    filter: { kind: [light-rail, light_rail, tram_stop] }
                    draw:   { icons: { sprite: light-rail } }
                liquor-store:
                    filter: { kind: [alcohol, liquor-store, liquor] }
                    draw:   { icons: { sprite: liquor-store } }
                market:
                    filter: { kind: [market, variety_store, boutique, dairy, retail] }
                    draw:   { icons: { sprite: market } }
                mine:
                    filter: { kind: [mind, quarry, mineshaft, adit] }
                    draw:   { icons: { sprite: mine } }
                miscellaneous-shop:
                    filter: { kind: [houseware, miscellaneous-shop] }
                    draw:   { icons: { sprite: miscellaneous-shop } }
                mobile-phone-shop:
                    filter: { kind: [mobile_phone] }
                    draw:   { icons: { sprite: mobile-phone-shop } }
                motorcycle-shop:
                    filter: { kind: [motorcycle, motorcycle_shop, motorcycle_repair] }
                    draw:   { icons: { sprite: motorcycle-shop } }
                mountain:
                    filter: { kind: [mountain, peak] }
                    draw:   { icons: { sprite: mountain } }
                movie-theatre:
                    filter: { kind: [cinema, movie-theatre, movie-theater] }
                    draw:   { icons: { sprite: movie-theatre } }
                museum:
                    filter: { kind: [museum, observatory] }
                    draw:   { icons: { sprite: museum } }
                music-store:
                    filter: { kind: [music, music-store, musical_instrument] }
                    draw:   { icons: { sprite: music-store } }
                newsstand:
                    filter: { kind: [kiosk, newsstand, newsagent] }
                    draw:   { icons: { sprite: newsstand } }
                nightlife:
                    filter: { kind: [nightclub, nightlife] }
                    draw:   { icons: { sprite: nightlife } }
                office:
                    filter: { kind: [insurance, office, company] }
                    draw:   { icons: { sprite: office } }
                office-supplies:
                    filter: { kind: [office_supplies, office-supplies, stationery] }
                    draw:   { icons: { sprite: office-supplies } }
                optical-shop:
                    filter: { kind: [optician, optical_shop, optical-shop] }
                    draw:   { icons: { sprite: optical-shop } }
                performing-arts:
                    filter: { kind: [theater, theatre, performing-arts] }
                    draw:   { icons: { sprite: performing-arts } }
                pet-store:
                    filter: { kind: [pet, pet-store, pet-service, pet_store] }
                    draw:   { icons: { sprite: pet-store } }
                pharmacy:
                    filter: { kind: [pharmacy, chemist] }
                    draw:   { icons: { sprite: pharmacy } }
                photography-lab:
                    filter: { kind: [photo_studio, photography_lab, photographer] }
                    draw:   { icons: { sprite: photography-lab } }
                picnic-spot:
                    filter: { kind: [picnic_site, picnic_spot, picnic-spot] }
                    draw:   { icons: { sprite: picnic-spot } }
                pool:
                    filter: { kind: [pool, swimming_pool, water_park] }
                    draw:   { icons: { sprite: pool } }
                pool-hall:
                    filter: { kind: [billiards, pool-hall] }
                    draw:   { icons: { sprite: pool-hall } }
                post-office:
                    filter: { kind: [post_office, post-office] }
                    draw:   { icons: { sprite: post-office } }
                power-pylon:
                    filter: { kind: [tower, power-pylon, pylon] }
                    draw:   { icons: { sprite: power-pylon } }
                real-estate:
                    filter: { kind: [estate_agent, real_estate] }
                    draw:   { icons: { sprite: real-estate } }
                recycling-facility:
                    filter: { kind: [recycling, recycling-facility] }
                    draw:   { icons: { sprite: recycling-facility } }
                rental-car:
                    filter: { kind: [rental-car, car_rental, car_sharing] }
                    draw:   { icons: { sprite: rental-car } }
                rest-area:
                    filter: { kind: [rest_area, rest-area] }
                    draw:   { icons: { sprite: rest-area } }
                restaurant:
                    filter: { kind: [restaurant, deli] }
                    draw:   { icons: { sprite: restaurant } }
                ruin:
                    filter: { kind: [ruins, archaeological_site] }
                    draw:   { icons: { sprite: ruin } }
                salon-barber:
                    filter: { kind: [hairdresser, salon-barber, salon, beauty_salon] }
                    draw:   { icons: { sprite: salon-barber } }
                school:
                    filter: { kind: [school, kindergarten] }
                    draw:   { icons: { sprite: school } }
                ship-wreck:
                    filter: { kind: [wreck] }
                    draw:   { icons: { sprite: ship-wreck } }
                shoe-store:
                    filter: { kind: [shoes, shoe-store, shoe_store] }
                    draw:   { icons: { sprite: shoe-store } }
                smoke-shop:
                    filter: { kind: [smoke_shop, tobacco] }
                    draw:   { icons: { sprite: smoke-shop } }
                spa-massage:
                    filter: { kind: [spa, spa-massage, sauna, massage] }
                    draw:   { icons: { sprite: spa-massage } }
                spiritual-center:
                    filter: { kind: [spiritual_center, spiritual-center, place_of_worship, wayside_chapel] }
                    draw:   { icons: { sprite: spiritual-center } }
                church:
                    filter: { kind: place_of_worship, religion: christian }
                    draw:   { icons: { sprite: church } }
                synagogue:
                    filter: { kind: place_of_worship, religion: jewish }
                    draw:   { icons: { sprite: synagogue } }
                buddhist:
                    filter: { kind: place_of_worship, religion: buddhist }
                    draw:   { icons: { sprite: buddhism } }
                mosque:
                    filter: { kind: place_of_worship, religion: muslim }
                    draw:   { icons: { sprite: mosque } }
                sporting-goods-shop:
                    filter: { kind: [sporting_goods, sporting-goods-shop, sports, outdoor] }
                    draw:   { icons: { sprite: sporting-goods-shop } }
                stable:
                    filter: { kind: [stable, horse_riding] }
                    draw:   { icons: { sprite: stable } }
                storage-facility:
                    filter: { kind: [storage, storage-facility] }
                    draw:   { icons: { sprite: storage-facility } }
                subway-entrance:
                    filter: { kind: [subway_entrance] }
                    draw:   { icons: { sprite: generic } }
                tailor-shop:
                    filter: { kind: [tailor, tailor-shop] }
                    draw:   { icons: { sprite: tailor-shop } }
                tattoo-parlor:
                    filter: { kind: [tattoo, tattoo_parlor, tattoo-parlor] }
                    draw:   { icons: { sprite: tattoo-parlor } }
                theme-park:
                    filter: { kind: [theme_park, theme-park, miniature_golf] }
                    draw:   { icons: { sprite: theme-park } }
                thrift-vintage-store:
                    filter: { kind: [thrift, thrift-vintage-store, second_hand] }
                    draw:   { icons: { sprite: thrift-vintage-store } }
                toll-booth:
                    filter: { kind: [toll_booth, checkpoint, border_control] }
                    draw:   { icons: { sprite: toll-booth } }
                toy-game-store:
                    filter: { kind: [toys, toy-game-store, baby_goods] }
                    draw:   { icons: { sprite: toy-game-store } }
                toilets:
                    filter: { kind: [toilets] }
                    draw:   { icons: { sprite: toilets } }
                veterinarian:
                    filter: { kind: [pet_care, veterinarian, veterinary] }
                    draw:   { icons: { sprite: veterinarian } }
                video-game-store:
                    filter: { kind: [video_games] }
                    draw:   { icons: { sprite: video-game-store } }
                video-store:
                    filter: { kind: [video, video_store] }
                    draw:   { icons: { sprite: video-store } }
                view-point:
                    filter: { kind: [viewpoint, view_point, view-point, vista] }
                    draw:   { icons: { sprite: view-point } }
                well:
                    filter: { kind: [well, water_well] }
                    draw:   { icons: { sprite: well } }
                wine-shop:
                    filter: { kind: [wine, wine-shop] }
                    draw:   { icons: { sprite: wine-shop } }
                winery:
                    filter: { kind: [winery, wine] }
                    draw:   { icons: { sprite: winery } }

    # todo: ocean and sea features are hiding in the places layer
    water-area-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - not: { kind: [riverbank, dock, playa] }
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 5 },  area: { min: 10000000000 } }
                - { $zoom: { min: 6 },  area: { min: 5000000000 } }
                - { $zoom: { min: 7 },  area: { min: 400000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        default-label-text:
            draw:
                text:
                    font:
                        fill: *text_fill_water
                        family: Helvetica
                        style: italic
                        weight: 500
                        size: 12px
                        stroke: { color: *text_stroke_water, width: 3 }
    ocean-sea-labels:
        data: { source: osm, layer: places }
        visible: *text_visible_water_labels
        filter: { name: true, kind: [sea, ocean] }
        draw:
            text:
                font:
                    fill: *text_fill_water
                    family: Helvetica
                    style: italic
                    weight: 500
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        sea-early:
            filter: { $zoom: { max: 4 }, kind: sea }
            draw: { text: { visible: false } }
    playa-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter: 
            all:
                - name: true
                - $geometry: point
                - kind: playa
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 7 },  area: { min: 1500000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        draw:
            text:
                font:
                    fill: grey
                    family: Helvetica
                    style: italic
                    weight: 500
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        # debug only
#        icons:
#            size: [[13, 12px], [15, 18px]]
#            interactive: true
#            sprite: *townspot_sprite
    water-line-labels:
        data: { source: osm, layer: [water] }
        filter:
            all:
                - name: true
                - area: false
                - kind: [river,canal,stream,dam,ditch,drain]
                - $zoom: { min: 14 }
        draw:
            text:
                font:
                    fill: *text_fill_water
                    family: Helvetica
                    style: italic
                    weight: 500
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        not-river-not-stream:
            filter: { kind: [canal,dam,ditch,drain], $zoom: { max: 16 } }
            draw:
                text:
                    visible: false
        stream:
            filter: { kind: [stream], $zoom: { max: 17 } }
            draw:
                text:
                    visible: false
                 
    landuse:
        data: { source: osm }
        tier1:
            filter: 
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 3 },  area: { min: 300000000 } }
                    - { $zoom: { min: 4 },  area: { min: 300000000 } }
                    - { $zoom: { min: 5 },  area: { min: 150000000 } }
                    - { $zoom: { min: 6 },  area: { min: 150000000 } }
                    - { $zoom: { min: 7 },  area: { min: 100000000 } }
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            national_park:
                filter: { kind: [national_park, "park or protected land"], not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] } }
                draw:
                    polygons:
                      color: *green7
                us_national_park:
                    # yosemite national park, death valley national park, grand canyon national park
                    filter: { operator: [ "United States National Park Service", "US National Park Service" ] }
                    draw:
                        polygons:
                            color: *green1
        tier2:
            filter: 
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 4 },  area: { min: 1000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 1000000000 } }
                    - { $zoom: { min: 6 },  area: { min: 150000000 } }
                    - { $zoom: { min: 7 },  area: { min: 100000000 } }
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            conservation:
                filter:
                    kind: [conservation, protected_area, nature_reserve]
                    $zoom: { min: 6 }
                draw:
                    polygons:
                        color: *green8
                wilderness-areas:
                    filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
                    draw:
                        polygons:
                            color: [[5,*green7],[8,*green1_w]]
                        outline:
                            style: lines
                            order: 3
                            color: *green1_ws
                            width: [[9,0px],[10,1px],[11,2px],[12,4px]]
                national_forest_level_6:
                    filter: { protect_class: ["6",6] }
                    draw:
                        polygons:
                            color: *green7
                        lines:
                            order: 10
                            color: *earth1
                            width: 2px
            # gotta be a protected area to draw green, not just a landcover type
            farm:
                filter:
                    kind: [farm, farmland]
                    $zoom: { min: 10}
                draw:
                    polygons:
                        color: [ [10,*green4], [12,*green5] ]
                        visible: *green4_v
            forest:
                filter: { kind: [forest,wood], $zoom: { min: 6 } }
                national-forest:
                    filter:
                        operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ]
                    draw:
                        polygons:
                            color: *green7
                        lines:
                            order: 10
                            color: *earth1
                            width: 2px
                landuse-forest:
                    filter:
                        not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] }
                        $zoom: { min: 10 }
                    draw:
                        polygons:
                            color: *green9

            nature_reserve:
                filter: { kind: nature_reserve, $zoom: { min: 7 } }
                draw:
                    polygons:
                        color: *green6
                wilderness-areas:
                    filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
                    draw:
                        polygons:
                            color: *green7
                        outline:
                            style: lines
                            color: *green6
                            width: [[9,0px],[10,2px],[12,4px]]
            parks-and-national-forests-not-national-park:
                filter: { $zoom: { min: 4 }, kind: [park, national_park, "park or protected land"], not: { operator: [ "United States National Park Service", "US National Park Service" ] } }
                # default for national forests and more?
                draw:
                    polygons:
                        color: *green7
                        order: function() { return feature.sort_key + 1 || 1; }
                    lines:
                        order: 3
                        color: *earth1
                        width: [[7,0px],[8,1px],[10,2px]]
            urban:
                filter: { kind: [urban, rural, residential] }
                visible: *earth2_v
                draw:
                    polygons:
                        color: [[0,*earth2],[9,*earth2]]
                        visible: *earth2_v
        tier3:
            filter: 
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            airport:
                filter:
                    kind: aerodrome
                draw:
                    polygons:
                        color: *purple
                        visible: *purple_v
            military:
                filter:
                    kind: military
                draw:
                    polygons:
                        color: *purple
            university:
                filter:
                    kind: university
                draw:
                    polygons:
                        color: *brown1
                        order: function() { return feature.sort_key - 2 || 1; }
        tier4:
            filter: 
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            cemetery:
                filter:
                    kind: cemetery
                draw:
                    polygons:
                        color: *green2
            commercial:
                filter:
                    kind: commercial
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            golf_course:
                filter:
                    kind: golf_course
                draw:
                    polygons:
                        color: *green3
            hospital:
                filter:
                    kind: hospital
                draw:
                    polygons:
                        color: *red1
            industrial:
                filter:
                    kind: industrial
                draw:
                    polygons:
                        color: *grey6
            power:
                filter: { kind: [plant, generator, substation] }
                draw:
                    polygons:
                        color: *grey3
            railway:
                filter:
                    kind: railway
                draw:
                    polygons:
                        color: *grey3
            recreation_ground:
                filter:
                    kind: recreation_ground
                draw:
                    polygons:
                        color: *mystry1
            retail:
                filter:
                    kind: retail
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            stadium:
                filter:
                    kind: stadium
                draw:
                    polygons:
                        color: *orange1
            zoo:
                filter:
                    kind: zoo
                draw:
                    polygons:
                        color: *green2
            man-made:
                filter: { kind: [pier,wastewater_plant,works,bridge,tower,breakwater,water_works,groyne,dike,cutline] }
                draw: { polygons: { order: 2, color: *grey3 } }
                pier:
                    filter: { kind: [pier,bridge,breakwater,groyne,dike,cutline] }
                    draw: { polygons: { order: 5, color: *earth1 } }
        tier5:
            filter: 
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            garden:
                filter:
                    kind: garden
                draw:
                    polygons:
                        color: *green2
                        order: 4
            parking:
                filter:
                    all:
                        - kind: parking
                        - $zoom: { min: 14 }
                    any:
                        - { $zoom: { min: 14 }, area: { min: 10000 } }
                        - { $zoom: { min: 15 }, area: { min: 5000 } }
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        polygons:
                            color: *grey1_e
            pedestrian:
                filter:
                    kind: [pedestrian,common]
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            pitch:
                filter: { kind: pitch }
                draw:
                    polygons:
                        order: 7
                        color: *orange2
                    outline:
                        style: lines
                        color: *green6
                        width: [[14,0px],[15,1px],[16,1m]]
            place_of_worship:
                filter:
                    kind: place_of_worship
                draw:
                    polygons:
                        color: *grey1
                        visible: *grey1_v
            playground:
                filter:
                    kind: playground
                draw:
                    polygons:
                        color: *brown3
            school:
                filter:
                    kind: school
                draw:
                    polygons:
                        color: *brown2
        z-order:
            draw: 
                polygons: 
                    order: function() { return feature.sort_key || 1; }


    landuse-not-filtered:
        data: { source: osm, layer: landuse }
        # runways and taxiways are also in the roads layer as lines
        # these ones are probably duplicate features, but have AREA (a good thing)
        runway:
            filter:
                kind: runway
            draw:
                polygons:
                    order: 10
                    color: *grey2
        apron:
            filter:
                kind: apron
                $zoom: { min: 15}
            draw:
                polygons:
                    order: 3
                    color: *grey1
                    visible: *grey1_v
                    
    landuse_urban_area-early:
        data: { source: osm, layer: landuse }
        filter:
            # This is from Natural Earth and only shows up from zoom(0,9)
            kind: ['urban area']
        visible: *earth2_ev
        draw:
            polygons:
                order: 1
                color: [[0,*earth2_e],[6,*earth2_e2],[8,*earth2_e3]]

    debug:
        data: { source: osm }
        draw:
            flat_lines:
                width: 2px
                order: 100
                color: '#ff0000'
